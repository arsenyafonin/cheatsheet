{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041e\u0442\u0441\u044e\u0434\u0430 \u0441\u0442\u043e\u0438\u0442 \u043d\u0430\u0447\u0430\u0442\u044c","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"},{"location":"R-data/","text":"\u0418\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u00b6 Airtable \u00b6 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 Airtable: library ( dplyr ) library ( httr ) library ( jsonlite ) AT_TOKEN = \"*************\" AT_BASE = \"https://api.airtable.com/v0/app5gby0DG3pF9KbB/\" AT_TABLE = \"all\" call_airtable = function ( base , table , token , query ) { url = paste0 ( base , table ) r = GET ( url , add_headers ( Authorization = paste0 ( \"Bearer \" , token )), query = query ) if ( status_code ( r ) == 429 ) { print ( \"Airtable API limit reached, 30 seconds break\" ) Sys.sleep ( 30 ) r = rerequest ( r ) } return ( fromJSON ( content ( r , as = \"text\" , encoding = \"UTF-8\" ))) } fetch_airtable = function ( ... , query = list ()) { json = call_airtable ( ... , query = query ) df = json $ records df = jsonlite :: flatten ( df ) # 'rlang' package can mask 'flatten' function colnames ( df ) = gsub ( \"fields.\" , \"\" , colnames ( df )) if ( \"offset\" %in% names ( json )) { query[ \"offset\" ] = json $ offset df_nextpage = fetch_airtable ( ... , query = query ) return ( bind_rows ( df , df_nextpage )) } else { return ( df ) } } at = fetch_airtable ( AT_BASE , AT_TABLE , AT_TOKEN , query = list ( \"filterByFormula\" = \"(appsboard=1)\" )) Amazon S3 \u00b6 \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 feather-\u0444\u0430\u0439\u043b\u043e\u0432: library ( feather ) download_feather = function ( url ) { temp = tempfile () on.exit ( unlink ( temp )) # removes temp file after function returns value download.file ( url , temp , mode = \"wb\" ) return ( read_feather ( temp )) } courses_url = \"http://d35raauzs56ob1.cloudfront.net/data/exports/courses.feather\" courses = download_feather ( courses_url )","title":"\u0418\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"R-data/#_1","text":"","title":"\u0418\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"R-data/#airtable","text":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 Airtable: library ( dplyr ) library ( httr ) library ( jsonlite ) AT_TOKEN = \"*************\" AT_BASE = \"https://api.airtable.com/v0/app5gby0DG3pF9KbB/\" AT_TABLE = \"all\" call_airtable = function ( base , table , token , query ) { url = paste0 ( base , table ) r = GET ( url , add_headers ( Authorization = paste0 ( \"Bearer \" , token )), query = query ) if ( status_code ( r ) == 429 ) { print ( \"Airtable API limit reached, 30 seconds break\" ) Sys.sleep ( 30 ) r = rerequest ( r ) } return ( fromJSON ( content ( r , as = \"text\" , encoding = \"UTF-8\" ))) } fetch_airtable = function ( ... , query = list ()) { json = call_airtable ( ... , query = query ) df = json $ records df = jsonlite :: flatten ( df ) # 'rlang' package can mask 'flatten' function colnames ( df ) = gsub ( \"fields.\" , \"\" , colnames ( df )) if ( \"offset\" %in% names ( json )) { query[ \"offset\" ] = json $ offset df_nextpage = fetch_airtable ( ... , query = query ) return ( bind_rows ( df , df_nextpage )) } else { return ( df ) } } at = fetch_airtable ( AT_BASE , AT_TABLE , AT_TOKEN , query = list ( \"filterByFormula\" = \"(appsboard=1)\" ))","title":"Airtable"},{"location":"R-data/#amazon-s3","text":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 feather-\u0444\u0430\u0439\u043b\u043e\u0432: library ( feather ) download_feather = function ( url ) { temp = tempfile () on.exit ( unlink ( temp )) # removes temp file after function returns value download.file ( url , temp , mode = \"wb\" ) return ( read_feather ( temp )) } courses_url = \"http://d35raauzs56ob1.cloudfront.net/data/exports/courses.feather\" courses = download_feather ( courses_url )","title":"Amazon S3"},{"location":"R-shiny/","text":"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 Shiny \u00b6 \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u043e\u043b\u044f \u00b6 app.R library ( shiny ) library ( shinyjs ) library ( openssl ) library ( promises ) library ( future ) plan ( multiprocess ) source ( \"airtable-functions.R\" ) source ( \"passchecker-functions.R\" ) AT_TOKEN = \"***************\" # UI ui = fluidPage ( includeCSS ( \"styles.css\" ), useShinyjs (), extendShinyjs ( text = js_code ), tags $ script ( js_enter ), fluidRow ( column ( 12 , div ( style = \"height: 30px\" , img ( src = \"loader.gif\" , width = \"30px\" , height = \"30px\" ))), id = \"loader\" ), fluidRow ( column ( 4 , textInput ( inputId = \"password\" , label = \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043b\u0438\u0447\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 Enter:\" , placeholder = \"my password\" )), id = \"password-input\" ) ) # Server server = function ( input , output ) { # Asyncronous passwords retrieval future ({ airtable_passes ( AT_TOKEN )}) %...>% { assign ( \"PASSWORDS\" , ., envir = .GlobalEnv ) # PASSWORDS in global env js $ getPassword () } # Password validation observeEvent ( input $ temppass , { if ( ! is.null ( input $ temppass ) && exists ( \"PASSWORDS\" )) { if ( input $ temppass %in% PASSWORDS ) { js $ log ( paste ( 'login successful: ' , input $ temppass )) hide ( \"password-input\" ) showNotification ( 'Logged in successfully' , type = \"message\" , duration = 3 ) # ... } else if ( input $ temppass == 'NA' ) { # First login hide ( \"loader\" ) show ( \"password-input\" ) } else { # Wrong password showNotification ( 'Invalid password' , type = \"error\" , duration = 3 ) } } }) # Password enter observeEvent ( input $ enterkey , { input = tolower ( input $ password ) encrypted_input = sha256 ( input , input ) js $ setPassword ( encrypted_input ) }) } # Run the application shinyApp ( ui = ui , server = server ) passchecker-functions.R # ShinyJS code js_code = \" shinyjs.getPassword = function() { if (localStorage.getItem('password') === null) { console.log('no cookie'); Shiny.onInputChange('temppass', 'NA'); } else { console.log('found in cookies: ', localStorage.password); Shiny.onInputChange('temppass', localStorage.password); } } shinyjs.setPassword = function(password) { localStorage.password = password; console.log('written to cookies: ', localStorage.password); Shiny.onInputChange('temppass', localStorage.password); } shinyjs.log = function(string) {console.log(string.toString());} \" # Custom JQuery code js_enter = \" $(document).on('keyup', function(e) { if(e.keyCode == 13) {Shiny.onInputChange('enterkey', Math.random());} }); \" # Airtable passwords retrieval function airtable_passes = function ( token ) { at = fetch_airtable ( \"https://api.airtable.com/v0/appysOdiKmcKSAWU1/\" , \"team\" , token , query = list ( \"filterByFormula\" = \"AND(status = 'active', password != '')\" )) return ( at $ password ) } styles.css /* Password validation CSS */ # password-input { display : none ; } # shiny-notification-panel { position : absolute ; height : 200 px ; top : 0 ; left : 0 ; right : 0 ; bottom : 0 ; margin : auto ; }","title":"Shiny"},{"location":"R-shiny/#shiny","text":"","title":"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 Shiny"},{"location":"R-shiny/#_1","text":"app.R library ( shiny ) library ( shinyjs ) library ( openssl ) library ( promises ) library ( future ) plan ( multiprocess ) source ( \"airtable-functions.R\" ) source ( \"passchecker-functions.R\" ) AT_TOKEN = \"***************\" # UI ui = fluidPage ( includeCSS ( \"styles.css\" ), useShinyjs (), extendShinyjs ( text = js_code ), tags $ script ( js_enter ), fluidRow ( column ( 12 , div ( style = \"height: 30px\" , img ( src = \"loader.gif\" , width = \"30px\" , height = \"30px\" ))), id = \"loader\" ), fluidRow ( column ( 4 , textInput ( inputId = \"password\" , label = \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043b\u0438\u0447\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 Enter:\" , placeholder = \"my password\" )), id = \"password-input\" ) ) # Server server = function ( input , output ) { # Asyncronous passwords retrieval future ({ airtable_passes ( AT_TOKEN )}) %...>% { assign ( \"PASSWORDS\" , ., envir = .GlobalEnv ) # PASSWORDS in global env js $ getPassword () } # Password validation observeEvent ( input $ temppass , { if ( ! is.null ( input $ temppass ) && exists ( \"PASSWORDS\" )) { if ( input $ temppass %in% PASSWORDS ) { js $ log ( paste ( 'login successful: ' , input $ temppass )) hide ( \"password-input\" ) showNotification ( 'Logged in successfully' , type = \"message\" , duration = 3 ) # ... } else if ( input $ temppass == 'NA' ) { # First login hide ( \"loader\" ) show ( \"password-input\" ) } else { # Wrong password showNotification ( 'Invalid password' , type = \"error\" , duration = 3 ) } } }) # Password enter observeEvent ( input $ enterkey , { input = tolower ( input $ password ) encrypted_input = sha256 ( input , input ) js $ setPassword ( encrypted_input ) }) } # Run the application shinyApp ( ui = ui , server = server ) passchecker-functions.R # ShinyJS code js_code = \" shinyjs.getPassword = function() { if (localStorage.getItem('password') === null) { console.log('no cookie'); Shiny.onInputChange('temppass', 'NA'); } else { console.log('found in cookies: ', localStorage.password); Shiny.onInputChange('temppass', localStorage.password); } } shinyjs.setPassword = function(password) { localStorage.password = password; console.log('written to cookies: ', localStorage.password); Shiny.onInputChange('temppass', localStorage.password); } shinyjs.log = function(string) {console.log(string.toString());} \" # Custom JQuery code js_enter = \" $(document).on('keyup', function(e) { if(e.keyCode == 13) {Shiny.onInputChange('enterkey', Math.random());} }); \" # Airtable passwords retrieval function airtable_passes = function ( token ) { at = fetch_airtable ( \"https://api.airtable.com/v0/appysOdiKmcKSAWU1/\" , \"team\" , token , query = list ( \"filterByFormula\" = \"AND(status = 'active', password != '')\" )) return ( at $ password ) } styles.css /* Password validation CSS */ # password-input { display : none ; } # shiny-notification-panel { position : absolute ; height : 200 px ; top : 0 ; left : 0 ; right : 0 ; bottom : 0 ; margin : auto ; }","title":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u043e\u043b\u044f"},{"location":"about/","text":"\u0421\u043e\u0444\u0442 \u041a\u0443\u043b\u044c\u0442\u0443\u0440\u0430 \u2014 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0430\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u043e\u0440\u0430\u043c \u0438 \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0434\u0438\u0437\u0430\u0439\u043d\u0435\u0440\u0430\u043c \u043e\u0441\u0432\u043e\u0438\u0442\u044c \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b. \u041c\u044b \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c \u043a\u0430\u043c\u0435\u0440\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043a \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044e: \u043a\u0443\u0440\u0441\u044b, \u043b\u0435\u043a\u0446\u0438\u0438 \u0438 \u0432\u043e\u0440\u043a\u0448\u043e\u043f\u044b \u0432 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u0435 \u2014 \u043b\u0443\u0447\u0448\u0438\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0437\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u0430 \u0441 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0435\u0439 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u043d\u0430\u0432\u044b\u043a\u043e\u0432.","title":"About"},{"location":"apps-atom/","text":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u00b6 \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0434\u0440\u0443\u0436\u0435\u043b\u044e\u0431\u043d\u044b\u0445 \u0442\u0435\u043c: File/Settings/Themes > Choose a Theme > UI Theme: One Light File/Settings/Themes > Choose a Theme > Syntax Theme: One Light \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0440\u0430\u0432\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430: Packages/Spell Check > Settings > Locales: en-US, ru-RU \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0412 Atom \u043d\u0430 Mac OS \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Spell Check \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u0440\u044d\u0448 \u0410\u0442\u043e\u043c\u0430. \u041d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0440\u0435\u0448\u0435\u043d\u0430, \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0432\u043e\u0442 \u0442\u0443\u0442 . \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Welcome \u0432\u043a\u043b\u0430\u0434\u043e\u043a \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435: Packages/Welcome > Disable \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 Atom \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u043d\u044e (\u0442\u043e\u043b\u044c\u043a\u043e Windows): File/Settings/System > System Settings > Show in file context menus: true File/Settings/System > System Settings > Show in folder context menus: true \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430: File/Settings/Editor > Editor Settings > Invisibles > Preferred Line Length: 100 File/Settings/Editor > Editor Settings > Invisibles > Soft Wrap: true File/Settings/Editor > Editor Settings > Invisibles > Soft Wrap At Preferred Line Length: true Packages \u00b6 \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u044b: Hydrogen atom-beautify file-icons language-autohotkey2 (\u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 Windows) split-diff \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 AutoHotkey (Windows): cmd.exe : apm install language-autohotkey2 Shortcuts \u00b6 \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0435\u043a Atom \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043f\u0438\u0438, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u043c \u0434\u0435\u043c\u043e\u043d\u043e\u043c, \u0430 \u043d\u0435 \u0438\u0437 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432 \u044d\u0442\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0440\u044f\u0447\u0438\u0445 \u043a\u043b\u0430\u0432\u0438\u0448 \u0434\u043b\u044f \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u043c\u0435\u0436\u0434\u0443 \u0432\u043a\u043b\u0430\u0434\u043a\u0430\u043c\u0438: File/Keymap... > \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430 keymap.cson . Windows: \"body\" : { \"alt-d\" : \"pane:show-previous-item\" , \"alt-f\" : \"pane:show-next-item\" } Mac OS: \".platform-darwin\" : { \"cmd-t\" : \"unset!\" } \"body\" : { \"cmd-d\" : \"pane:show-previous-item\" , \"cmd-f\" : \"pane:show-next-item\" } \u0423\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0430 \u0433\u043e\u0440\u044f\u0447\u0438\u0445 \u043a\u043b\u0430\u0432\u0438\u0448 \u0438 \u0440\u0430\u0441\u043a\u043b\u0430\u0434\u043a\u0438 \u0411\u0438\u0440\u043c\u0430\u043d\u0430 \u043d\u0430 Windows: \"atom-workspace atom-pane\" : { \"ctrl-alt--\" : \"unset!\" } \".platform-win32 atom-text-editor\" : { \"ctrl-alt-,\" : \"unset!\" , \"ctrl-alt-.\" : \"unset!\" }","title":"Atom"},{"location":"apps-atom/#_1","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0434\u0440\u0443\u0436\u0435\u043b\u044e\u0431\u043d\u044b\u0445 \u0442\u0435\u043c: File/Settings/Themes > Choose a Theme > UI Theme: One Light File/Settings/Themes > Choose a Theme > Syntax Theme: One Light \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0440\u0430\u0432\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430: Packages/Spell Check > Settings > Locales: en-US, ru-RU \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0412 Atom \u043d\u0430 Mac OS \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Spell Check \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u0440\u044d\u0448 \u0410\u0442\u043e\u043c\u0430. \u041d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0440\u0435\u0448\u0435\u043d\u0430, \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0432\u043e\u0442 \u0442\u0443\u0442 . \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Welcome \u0432\u043a\u043b\u0430\u0434\u043e\u043a \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435: Packages/Welcome > Disable \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 Atom \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u043d\u044e (\u0442\u043e\u043b\u044c\u043a\u043e Windows): File/Settings/System > System Settings > Show in file context menus: true File/Settings/System > System Settings > Show in folder context menus: true \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430: File/Settings/Editor > Editor Settings > Invisibles > Preferred Line Length: 100 File/Settings/Editor > Editor Settings > Invisibles > Soft Wrap: true File/Settings/Editor > Editor Settings > Invisibles > Soft Wrap At Preferred Line Length: true","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438"},{"location":"apps-atom/#packages","text":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u044b: Hydrogen atom-beautify file-icons language-autohotkey2 (\u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 Windows) split-diff \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 AutoHotkey (Windows): cmd.exe : apm install language-autohotkey2","title":"Packages"},{"location":"apps-atom/#shortcuts","text":"\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0435\u043a Atom \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043f\u0438\u0438, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u043c \u0434\u0435\u043c\u043e\u043d\u043e\u043c, \u0430 \u043d\u0435 \u0438\u0437 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432 \u044d\u0442\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0440\u044f\u0447\u0438\u0445 \u043a\u043b\u0430\u0432\u0438\u0448 \u0434\u043b\u044f \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u043c\u0435\u0436\u0434\u0443 \u0432\u043a\u043b\u0430\u0434\u043a\u0430\u043c\u0438: File/Keymap... > \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430 keymap.cson . Windows: \"body\" : { \"alt-d\" : \"pane:show-previous-item\" , \"alt-f\" : \"pane:show-next-item\" } Mac OS: \".platform-darwin\" : { \"cmd-t\" : \"unset!\" } \"body\" : { \"cmd-d\" : \"pane:show-previous-item\" , \"cmd-f\" : \"pane:show-next-item\" } \u0423\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0430 \u0433\u043e\u0440\u044f\u0447\u0438\u0445 \u043a\u043b\u0430\u0432\u0438\u0448 \u0438 \u0440\u0430\u0441\u043a\u043b\u0430\u0434\u043a\u0438 \u0411\u0438\u0440\u043c\u0430\u043d\u0430 \u043d\u0430 Windows: \"atom-workspace atom-pane\" : { \"ctrl-alt--\" : \"unset!\" } \".platform-win32 atom-text-editor\" : { \"ctrl-alt-,\" : \"unset!\" , \"ctrl-alt-.\" : \"unset!\" }","title":"Shortcuts"},{"location":"apps-aws-cli/","text":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 AWS Command Line Interface \u043d\u0430 Windows \u00b6 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c AWS CLI \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438: Win + R : cmd \u2192 cmd.exe: pip install awscli --upgrade --user \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0443\u0442\u044c \u043a AWS CLI \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441\u0440\u0435\u0434\u044b PATH: Win + R : sysdm.cpl \u2192 \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u2192 \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u044b...: \u0421\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435: Path \u2192 \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c...: \u0421\u043e\u0437\u0434\u0430\u0442\u044c: C:\\Users\\________\\AppData\\Roaming\\Python\\Python36\\Scripts \u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c ________ \u0432\u0430\u0448\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043e\u043d\u043e \u0438\u0434\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 C:\\Users\\ , \u0435\u0441\u043b\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 ( Win + R : cmd ) \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443: Win + R : cmd \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c AWS CLI: cmd.exe: aws configure AWS Access Key ID: login \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links AWS Secret Access Key: password \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links Default region name: eu-central-1 Default output format > Skip \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 AWS Command Line Interface \u043d\u0430 Mac OS \u00b6 \u0412\u0441\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438\u0437 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043d\u0438\u0436\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432 Terminal. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c AWS CLI \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e pip: pip3 install awscli --upgrade --user \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0443 pip3 show awscli , \u043d\u0430\u0439\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 Location , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0443\u0442\u044c \u043a \u043c\u043e\u0434\u0443\u043b\u044e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: ./Library/Python/3.6/lib/python/site-packages \u0421\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0443\u0442\u044c \u043a \u043c\u043e\u0434\u0443\u043b\u044e, \u0437\u0430\u043c\u0435\u043d\u0438\u0432 lib/... \u043d\u0430 bin , \u0430 ./ \u043d\u0430 $HOME , \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0443\u0442\u044c \u0432\u0438\u0434\u0430: $HOME/Library/Python/3.6/bin \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0443\u0442\u044c \u043a AWS CLI \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441\u0440\u0435\u0434\u044b PATH: echo 'export PATH=$HOME/Library/Python/3.6/bin:$PATH' >> ~/.bash_profile \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443: source ~/.bash_profile \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e aws --version \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c AWS CLI \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e aws configure : AWS Access Key ID: login \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links AWS Secret Access Key: password \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links Default region name: eu-central-1 Default output format > Skip \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u00b6 \u0412\u044b\u0434\u0430\u0447\u0430 \u0432\u0441\u0435\u0445 \u043f\u0443\u0442\u0435\u0439 \u043f\u043e \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0443: aws s3api list-objects --bucket \"BUCKET\" --prefix \"PREFIX\" --query 'Contents[].Key' \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0433\u043e URL \u043d\u0430 24 \u0447\u0430\u0441\u0430 \u0434\u043b\u044f \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u044f: aws s3 presign 's3://arseny/movies/...' --expires-in 86400","title":"AWS CLI"},{"location":"apps-aws-cli/#aws-command-line-interface-windows","text":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c AWS CLI \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438: Win + R : cmd \u2192 cmd.exe: pip install awscli --upgrade --user \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0443\u0442\u044c \u043a AWS CLI \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441\u0440\u0435\u0434\u044b PATH: Win + R : sysdm.cpl \u2192 \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u2192 \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u044b...: \u0421\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435: Path \u2192 \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c...: \u0421\u043e\u0437\u0434\u0430\u0442\u044c: C:\\Users\\________\\AppData\\Roaming\\Python\\Python36\\Scripts \u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c ________ \u0432\u0430\u0448\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043e\u043d\u043e \u0438\u0434\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 C:\\Users\\ , \u0435\u0441\u043b\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 ( Win + R : cmd ) \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443: Win + R : cmd \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c AWS CLI: cmd.exe: aws configure AWS Access Key ID: login \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links AWS Secret Access Key: password \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links Default region name: eu-central-1 Default output format > Skip","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 AWS Command Line Interface \u043d\u0430 Windows"},{"location":"apps-aws-cli/#aws-command-line-interface-mac-os","text":"\u0412\u0441\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438\u0437 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043d\u0438\u0436\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432 Terminal. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c AWS CLI \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e pip: pip3 install awscli --upgrade --user \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0443 pip3 show awscli , \u043d\u0430\u0439\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 Location , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0443\u0442\u044c \u043a \u043c\u043e\u0434\u0443\u043b\u044e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: ./Library/Python/3.6/lib/python/site-packages \u0421\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0443\u0442\u044c \u043a \u043c\u043e\u0434\u0443\u043b\u044e, \u0437\u0430\u043c\u0435\u043d\u0438\u0432 lib/... \u043d\u0430 bin , \u0430 ./ \u043d\u0430 $HOME , \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0443\u0442\u044c \u0432\u0438\u0434\u0430: $HOME/Library/Python/3.6/bin \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0443\u0442\u044c \u043a AWS CLI \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441\u0440\u0435\u0434\u044b PATH: echo 'export PATH=$HOME/Library/Python/3.6/bin:$PATH' >> ~/.bash_profile \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443: source ~/.bash_profile \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e aws --version \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c AWS CLI \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e aws configure : AWS Access Key ID: login \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links AWS Secret Access Key: password \u0441\u0435\u0440\u0432\u0438\u0441\u0430 Amazon AWS CLI \u0432 SC_ Links Default region name: eu-central-1 Default output format > Skip","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 AWS Command Line Interface \u043d\u0430 Mac OS"},{"location":"apps-aws-cli/#_1","text":"\u0412\u044b\u0434\u0430\u0447\u0430 \u0432\u0441\u0435\u0445 \u043f\u0443\u0442\u0435\u0439 \u043f\u043e \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0443: aws s3api list-objects --bucket \"BUCKET\" --prefix \"PREFIX\" --query 'Contents[].Key' \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0433\u043e URL \u043d\u0430 24 \u0447\u0430\u0441\u0430 \u0434\u043b\u044f \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u044f: aws s3 presign 's3://arseny/movies/...' --expires-in 86400","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"apps-spreadsheets/","text":"Google App Scripts \u00b6 \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b: function InitialFormatting () { var spreadsheet = SpreadsheetApp . getActive (); var sheet = spreadsheet . getActiveSheet (); // Deleting unused rows and columns var lastRow = sheet . getLastRow (); var lastColumn = sheet . getLastColumn (); sheet . deleteRows ( lastRow + 1 , sheet . getMaxRows () - lastRow ); sheet . deleteColumns ( lastColumn + 1 , sheet . getMaxColumns () - lastColumn ); // Custom formatting sheet . clearFormats (); sheet . setFrozenRows ( 1 ); var range = sheet . getDataRange (); range . setHorizontalAlignment ( 'left' ). setVerticalAlignment ( 'top' ); range . setFontFamily ( 'Roboto Mono' ); range . setWrapStrategy ( SpreadsheetApp . WrapStrategy . WRAP ); // Logger.log(); };","title":"Google Spreadsheets"},{"location":"apps-spreadsheets/#google-app-scripts","text":"\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b: function InitialFormatting () { var spreadsheet = SpreadsheetApp . getActive (); var sheet = spreadsheet . getActiveSheet (); // Deleting unused rows and columns var lastRow = sheet . getLastRow (); var lastColumn = sheet . getLastColumn (); sheet . deleteRows ( lastRow + 1 , sheet . getMaxRows () - lastRow ); sheet . deleteColumns ( lastColumn + 1 , sheet . getMaxColumns () - lastColumn ); // Custom formatting sheet . clearFormats (); sheet . setFrozenRows ( 1 ); var range = sheet . getDataRange (); range . setHorizontalAlignment ( 'left' ). setVerticalAlignment ( 'top' ); range . setFontFamily ( 'Roboto Mono' ); range . setWrapStrategy ( SpreadsheetApp . WrapStrategy . WRAP ); // Logger.log(); };","title":"Google App Scripts"},{"location":"cmd-bash/","text":"Shell-\u0441\u043a\u0440\u0438\u043f\u0442\u044b \u00b6 Command Prompt \u00b6 \u041f\u0430\u0443\u0437\u0430 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b: @if NOT [\"%errorlevel%\"]==[\"0\"] pause \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441\u043a\u0440\u0438\u043f\u0442\u0430: @cd %~dp0 \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0443\u0442\u0435\u0439 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 Python: python - c \"import sys; print(' \\n '.join(sys.path))\" Bash \u00b6 \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441\u043a\u0440\u0438\u043f\u0442\u0430: DIR = \" $( cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) \" && pwd ) \" DIR = $( printf %q \" $DIR \" ) eval cd $DIR \u041b\u044e\u0431\u0430\u044f \u043e\u0431\u043e\u043b\u043e\u0447\u043a\u0430 \u00b6 \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f .ipynb \u0432 .py-\u0441\u043a\u0440\u0438\u043f\u0442: jupyter nbconvert --to script notebook_title.ipynb \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 git: git remote -v # Show remote URL git remote set-url origin https://github.com/USERNAME/REPOSITORY.git # Change 'origin' remote URL git push origin master # Push to master branch of 'origin' remote URL git ls-tree -r master --name-only # Show all tracked files git check-ignore * # Show ignored files # Change Github Release to latest commit git tag -f -a <tagname> -m \"Any text\" # <tagname> is Release version, e.g. v3.0 git push -f --tags \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 ffmpeg \u00b6 \u041e\u0431\u0440\u0435\u0437\u043a\u0430 \u0432\u0438\u0434\u0435\u043e\u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0431\u0435\u0437 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e ffmpeg \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430, \u043e\u0434\u043d\u0430\u043a\u043e \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u0442 \u0432\u0438\u0434\u0435\u043e \u043f\u043e keyframe, \u0430 \u0430\u0443\u0434\u0438\u043e \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0435\u0441\u043b\u0438 keyframe \u043d\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043d\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u0430, \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442 \u0434\u043e keyframe \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u043e\u0442\u043e\u0439. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0443\u0445\u043e\u0434\u0430 \u043e\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u2014 \u043f\u043e\u0438\u0441\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f keyframe \u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u0431\u0440\u0435\u0437\u043a\u0438: ffmpeg -i input.mp4 -ss hh:mm:ss -c copy -to hh:mm:ss output.mp4 \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u0442 \u0432\u0438\u0434\u0435\u043e \u0431\u043e\u043b\u0435\u0435 \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e, \u043e\u0434\u043d\u0430\u043a\u043e \u043d\u0430 \u0432\u0438\u0434\u0435\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0440\u0442\u0435\u0444\u0430\u043a\u0442\u043e\u0432 \u0438 \u0438\u0441\u043a\u0430\u0436\u0435\u043d\u0438\u0439: ffmpeg -ss hh:mm:ss -i input.mp4 -to hh:mm:ss -c copy output.mp4 \u0422\u0440\u0435\u0442\u0438\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043e\u0431\u0440\u0435\u0437\u043a\u0443 \u0432\u0438\u0434\u0435\u043e \u0441 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0435\u0439 \u0441 \u0442\u0435\u043c\u0438 \u0436\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438, \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442: ffmpeg -i input.mp4 -ss 00 :mm:ss -to hh:mm:ss output.mp4 \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0430\u0443\u0434\u0438\u043e\u0434\u043e\u0440\u043e\u0436\u043a\u0438: ffmpeg -i input.mp4 -vn -acodec copy audio.aac \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0443\u0434\u0438\u043e\u0434\u043e\u0440\u043e\u0436\u043a\u0438: ffmpeg -i input.mp4 -i audio.m4a -map 0 :0 -map 1 :0 output.mp4 \u0421\u043d\u044f\u0442\u0438\u0435 DRM-\u0437\u0430\u0449\u0438\u0442\u044b \u0441 Audible \u0430\u0443\u0434\u0438\u043e\u043a\u043d\u0438\u0433\u0438: # AUTHCODE for fettti@yandex.ru: 7db62636 ffmpeg -activation_bytes AUTHCODE -i input.aax -c copy output.m4b \u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c AUTHCODE \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u043b\u0430\u0433\u0438\u043d\u0430 \u043d\u0430 RainbowCrack, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f rcrack.exe \u0441 Wine \u043d\u0430 Mac OS, \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0432 rainbow tables (.rtc) \u0438\u0437 \u043a\u043e\u0440\u043d\u044f \u0432 \u043f\u0430\u043f\u043a\u0443 run . \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043b\u0438\u0448\u043d\u0438\u0445 \u0441\u0442\u0440\u0438\u043c\u043e\u0432 \u0438\u043b\u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0430\u0443\u0434\u0438\u043e\u043a\u043d\u0438\u0433\u0438: ffmpeg -i audiobook.m4b -map 0 :0 -c copy output.m4b # \u044d\u043a\u0441\u043f\u043e\u0440\u0442 \u0441\u0442\u0440\u0438\u043c\u0430 '0' \u0441 \u0433\u043b\u0430\u0432\u0430\u043c\u0438 ffmpeg -i audiobook.m4b -map 0 :0 -c:a aac -b:a 128k output.m4b # \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0438\u043c\u0430 '0' \u0432 128 kbps \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 mp4v2 \u00b6 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: brew install mp4v2 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0433\u043b\u0430\u0432\u0430\u043c\u0438 (\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432\u0430\u0436\u043d\u0430): mp4chaps -l audiobook.m4b # \u0412\u044b\u0432\u043e\u0434 \u0433\u043b\u0430\u0432 mp4chaps -x audiobook.m4b # \u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0433\u043b\u0430\u0432 \u0432 \u0444\u0430\u0439\u043b audiobook.chapters.txt mp4chaps -r audiobook.m4b # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0433\u043b\u0430\u0432 mp4chaps -i audiobook.m4b # \u0418\u043c\u043f\u043e\u0440\u0442 \u0433\u043b\u0430\u0432 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 audiobook.chapters.txt \u0432 \u0442\u043e\u0439 \u0436\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 AtomicParsley \u00b6 \u0412\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0444\u0430\u0439\u043b\u0435: AtomicParsley audiobook.m4b -t \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043e\u0431\u043b\u043e\u0436\u043a\u043e\u0439: AtomicParsley audiobook.m4b --artwork REMOVE_ALL # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u043b\u043e\u0436\u0435\u043a AtomicParsley audiobook.m4b --artwork cover.png --overWrite # \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u043b\u043e\u0436\u043a\u0438 (.png, 600\u00d7600) AtomicParsley audiobook.m4b --extractPix # \u044d\u043a\u0441\u043f\u043e\u0440\u0442 \u043e\u0431\u043b\u043e\u0436\u043a\u0438 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u043a\u043d\u0438\u0433\u0438 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0442\u044d\u0433\u0430\u043c\u0438: AtomicParsley audiobook.m4b --metaEnema # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u044d\u0433\u043e\u0432 AtomicParsley audiobook.m4b --artist \"{author}\" \\ # \u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f \u0430\u0432\u0442\u043e\u0440\u0430 --albumArtist \"{narrator}\" \\ # \u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f \u043d\u0430\u0440\u0440\u0430\u0442\u043e\u0440\u0430 --title \"{title}\" --album \"{title}\" \\ # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 --year { YYYY } \\ # \u0413\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0430\u0443\u0434\u0438\u043e\u043a\u043d\u0438\u0433\u0438 (\u0438\u043b\u0438 \u043f\u0435\u0447\u0430\u0442\u043d\u043e\u0439) --genre \"Audiobook\" \\ --stik value = 2 \\ # 'Kind of Media' \u0442\u044d\u0433 \u0434\u043b\u044f iTunes --description \"made by highandmighty\" \\ --overWrite # \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 metaflac \u0438 shntool \u00b6 \u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043e\u0431\u043b\u043e\u0436\u0435\u043a \u0444\u0430\u0439\u043b\u043e\u0432 .flac: metaflac --export-picture-to = \"cover.jpg\" \"file.flac\" # \u041e\u0434\u0438\u043d \u0444\u0430\u0439\u043b # \u0426\u0438\u043a\u043b \u043f\u043e \u0432\u0441\u0435\u043c \u0444\u0430\u0439\u043b\u0430\u043c .flac \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 for i in *.flac ; do [ -f \" $i \" ] || break metaflac --export-picture-to = \" ${ i /.flac/.jpg } \" \" $i \" done \u0414\u0435\u043b\u0435\u043d\u0438\u0435 .flac-\u0444\u0430\u0439\u043b\u0430 \u043f\u043e .cue-sheet: shnsplit -f input.cue -o flac input.flac \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 mediainfo \u00b6 \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432\u0438\u0434\u0435\u043e\u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u043e \u043f\u0435\u0440\u0435\u0447\u043d\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0438\u0437 txt-\u0444\u0430\u0439\u043b\u0430 \u0432 \u0442\u043e\u0439 \u0436\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 --Inform= . @cd %~dp0 @mediainfo --Inform = file://mediainfo-paramerts.txt \"video file.mov\" @PAUSE mediainfo --Inform = \"General;Filename: %CompleteName%\" \"video file.mov\" \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 txt-\u0444\u0430\u0439\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 ( General; \u0438\u043b\u0438 Video; ). \u0421\u0430\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0431\u0440\u0430\u043c\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u043a\u0430\u043c\u0438 % . \u0412\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430: General;Filename: %CompleteName%\\nFormat: %Format%\\n Video;Pixel Format: %ChromaSubsampling%\\nColor Space: %ColorSpace%\" \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439: mediainfo --info-parameters \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 pandoc \u00b6 \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f Markdown \u0432 InDesign .icml: pandoc -s -f markdown -t icml -o \"output file.icml\" \"input file.md\" \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e Pandoc \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Setext-style headers, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0442\u0435\u043e\u0440\u0438\u0438 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u044e\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u0447\u043a\u0438. \u041f\u0440\u0438 \u0432\u044b\u0431\u043e\u0440\u0435 ATX-style headers ( --atx-headers ) \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u0447\u043a\u0438 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435. \u041f\u0440\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435 media-\u0444\u0430\u0439\u043b\u043e\u0432 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u043f\u0430\u043f\u043a\u0443 media \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043e\u043f\u0446\u0438\u0435\u0439 --extract-media=\"\" . \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f .docx \u0432 Markdown: pandoc -s -f docx -t markdown -o \"output file.md\" --atx-headers --wrap = none --extract-media = \"\" \"input file.docx\" \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 .epub \u0438\u0437 Markdown \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0434\u0432\u0443\u0445 \u0444\u0430\u0439\u043b\u043e\u0432: \u0442\u0435\u043a\u0441\u0442\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 Markdown \u0438 YAML-\u0444\u0430\u0439\u043b\u0430 \u0441 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 ( metadata.txt ). \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0432 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e EPUB 3: pandoc --atx-headers -t epub3 -o mybook.epub metadata.txt content.md --- title : - type : main text : \u0412\u0442\u043e\u0440\u043e\u0439 \u0446\u0438\u0444\u0440\u043e\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442 - type : subtitle text : \u041f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0440\u0430\u0437\u0443\u043c\u0430 creator : - role : author text : \u041c\u0430\u0440\u0438\u043e \u041a\u0430\u0440\u043f\u043e rights : softculture.cc language : ru-RU ... \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 magick \u0438 gifsicle \u00b6 \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f .pdf \u0432 .png: magick convert -alpha off -density 600 -resize x1080 -depth 8 -quality 85 input.pdf output.png \u0422\u0435\u0441\u0442 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b: magick convert input.pdf [ 1 ] output.png \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e 2-\u0433\u043e \u043a\u0430\u0434\u0440\u0430 \u0432 .gif \u0441 gifsicle: # \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0444\u0440\u0435\u0439\u043c\u043e\u0432 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e numframes = ` identify -format \"%n\\n\" input.gif | head -1 ` # \u0423\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 1 \u0434\u043b\u044f \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441 seq numframes = ` expr $numframes - 1 ` # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0440\u0435\u0439\u043c\u0430 \u0441 gifsicle gifsicle input.gif --delete $( seq -f \"#%g\" 1 2 $numframes ) -o output.gif \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0437\u0430 \u0434\u0438\u0441\u043a\u0430 (Mac OS) \u00b6 \u0412\u044b\u0432\u043e\u0434 \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0434\u0438\u0441\u043a\u043e\u0432: diskutil list \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0437\u0430 \u0434\u0438\u0441\u043a\u0430: sudo diskutil unmount /dev/disk\u0425 dd if = /dev/disk\u0425 of = output.iso # \u041c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u044f\u0442\u044c \u0434\u043e 30 \u043c\u0438\u043d\u0443\u0442 diskutil eject /dev/diskX # \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u0441\u043a\u0430 Youtube-dl \u00b6 \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0438\u0434\u0435\u043e \u0441 YouTube \u0441 youtube-dl: youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' '{FULL YOUTUBE URL}'","title":"Shell"},{"location":"cmd-bash/#shell-","text":"","title":"Shell-\u0441\u043a\u0440\u0438\u043f\u0442\u044b"},{"location":"cmd-bash/#command-prompt","text":"\u041f\u0430\u0443\u0437\u0430 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b: @if NOT [\"%errorlevel%\"]==[\"0\"] pause \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441\u043a\u0440\u0438\u043f\u0442\u0430: @cd %~dp0 \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0443\u0442\u0435\u0439 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 Python: python - c \"import sys; print(' \\n '.join(sys.path))\"","title":"Command Prompt"},{"location":"cmd-bash/#bash","text":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441\u043a\u0440\u0438\u043f\u0442\u0430: DIR = \" $( cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) \" && pwd ) \" DIR = $( printf %q \" $DIR \" ) eval cd $DIR","title":"Bash"},{"location":"cmd-bash/#_1","text":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f .ipynb \u0432 .py-\u0441\u043a\u0440\u0438\u043f\u0442: jupyter nbconvert --to script notebook_title.ipynb \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 git: git remote -v # Show remote URL git remote set-url origin https://github.com/USERNAME/REPOSITORY.git # Change 'origin' remote URL git push origin master # Push to master branch of 'origin' remote URL git ls-tree -r master --name-only # Show all tracked files git check-ignore * # Show ignored files # Change Github Release to latest commit git tag -f -a <tagname> -m \"Any text\" # <tagname> is Release version, e.g. v3.0 git push -f --tags","title":"\u041b\u044e\u0431\u0430\u044f \u043e\u0431\u043e\u043b\u043e\u0447\u043a\u0430"},{"location":"cmd-bash/#ffmpeg","text":"\u041e\u0431\u0440\u0435\u0437\u043a\u0430 \u0432\u0438\u0434\u0435\u043e\u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0431\u0435\u0437 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e ffmpeg \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430, \u043e\u0434\u043d\u0430\u043a\u043e \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u0442 \u0432\u0438\u0434\u0435\u043e \u043f\u043e keyframe, \u0430 \u0430\u0443\u0434\u0438\u043e \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0435\u0441\u043b\u0438 keyframe \u043d\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043d\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u0430, \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442 \u0434\u043e keyframe \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u043e\u0442\u043e\u0439. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0443\u0445\u043e\u0434\u0430 \u043e\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u2014 \u043f\u043e\u0438\u0441\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f keyframe \u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u0431\u0440\u0435\u0437\u043a\u0438: ffmpeg -i input.mp4 -ss hh:mm:ss -c copy -to hh:mm:ss output.mp4 \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043e\u0431\u0440\u0435\u0437\u0430\u0435\u0442 \u0432\u0438\u0434\u0435\u043e \u0431\u043e\u043b\u0435\u0435 \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e, \u043e\u0434\u043d\u0430\u043a\u043e \u043d\u0430 \u0432\u0438\u0434\u0435\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0440\u0442\u0435\u0444\u0430\u043a\u0442\u043e\u0432 \u0438 \u0438\u0441\u043a\u0430\u0436\u0435\u043d\u0438\u0439: ffmpeg -ss hh:mm:ss -i input.mp4 -to hh:mm:ss -c copy output.mp4 \u0422\u0440\u0435\u0442\u0438\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043e\u0431\u0440\u0435\u0437\u043a\u0443 \u0432\u0438\u0434\u0435\u043e \u0441 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0435\u0439 \u0441 \u0442\u0435\u043c\u0438 \u0436\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438, \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442: ffmpeg -i input.mp4 -ss 00 :mm:ss -to hh:mm:ss output.mp4 \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0430\u0443\u0434\u0438\u043e\u0434\u043e\u0440\u043e\u0436\u043a\u0438: ffmpeg -i input.mp4 -vn -acodec copy audio.aac \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0443\u0434\u0438\u043e\u0434\u043e\u0440\u043e\u0436\u043a\u0438: ffmpeg -i input.mp4 -i audio.m4a -map 0 :0 -map 1 :0 output.mp4 \u0421\u043d\u044f\u0442\u0438\u0435 DRM-\u0437\u0430\u0449\u0438\u0442\u044b \u0441 Audible \u0430\u0443\u0434\u0438\u043e\u043a\u043d\u0438\u0433\u0438: # AUTHCODE for fettti@yandex.ru: 7db62636 ffmpeg -activation_bytes AUTHCODE -i input.aax -c copy output.m4b \u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c AUTHCODE \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u043b\u0430\u0433\u0438\u043d\u0430 \u043d\u0430 RainbowCrack, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f rcrack.exe \u0441 Wine \u043d\u0430 Mac OS, \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0432 rainbow tables (.rtc) \u0438\u0437 \u043a\u043e\u0440\u043d\u044f \u0432 \u043f\u0430\u043f\u043a\u0443 run . \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043b\u0438\u0448\u043d\u0438\u0445 \u0441\u0442\u0440\u0438\u043c\u043e\u0432 \u0438\u043b\u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0430\u0443\u0434\u0438\u043e\u043a\u043d\u0438\u0433\u0438: ffmpeg -i audiobook.m4b -map 0 :0 -c copy output.m4b # \u044d\u043a\u0441\u043f\u043e\u0440\u0442 \u0441\u0442\u0440\u0438\u043c\u0430 '0' \u0441 \u0433\u043b\u0430\u0432\u0430\u043c\u0438 ffmpeg -i audiobook.m4b -map 0 :0 -c:a aac -b:a 128k output.m4b # \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0438\u043c\u0430 '0' \u0432 128 kbps","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 ffmpeg"},{"location":"cmd-bash/#mp4v2","text":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: brew install mp4v2 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0433\u043b\u0430\u0432\u0430\u043c\u0438 (\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432\u0430\u0436\u043d\u0430): mp4chaps -l audiobook.m4b # \u0412\u044b\u0432\u043e\u0434 \u0433\u043b\u0430\u0432 mp4chaps -x audiobook.m4b # \u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0433\u043b\u0430\u0432 \u0432 \u0444\u0430\u0439\u043b audiobook.chapters.txt mp4chaps -r audiobook.m4b # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0433\u043b\u0430\u0432 mp4chaps -i audiobook.m4b # \u0418\u043c\u043f\u043e\u0440\u0442 \u0433\u043b\u0430\u0432 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 audiobook.chapters.txt \u0432 \u0442\u043e\u0439 \u0436\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 mp4v2"},{"location":"cmd-bash/#atomicparsley","text":"\u0412\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0444\u0430\u0439\u043b\u0435: AtomicParsley audiobook.m4b -t \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043e\u0431\u043b\u043e\u0436\u043a\u043e\u0439: AtomicParsley audiobook.m4b --artwork REMOVE_ALL # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u043b\u043e\u0436\u0435\u043a AtomicParsley audiobook.m4b --artwork cover.png --overWrite # \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u043b\u043e\u0436\u043a\u0438 (.png, 600\u00d7600) AtomicParsley audiobook.m4b --extractPix # \u044d\u043a\u0441\u043f\u043e\u0440\u0442 \u043e\u0431\u043b\u043e\u0436\u043a\u0438 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u043a\u043d\u0438\u0433\u0438 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0442\u044d\u0433\u0430\u043c\u0438: AtomicParsley audiobook.m4b --metaEnema # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u044d\u0433\u043e\u0432 AtomicParsley audiobook.m4b --artist \"{author}\" \\ # \u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f \u0430\u0432\u0442\u043e\u0440\u0430 --albumArtist \"{narrator}\" \\ # \u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f \u043d\u0430\u0440\u0440\u0430\u0442\u043e\u0440\u0430 --title \"{title}\" --album \"{title}\" \\ # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 --year { YYYY } \\ # \u0413\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0430\u0443\u0434\u0438\u043e\u043a\u043d\u0438\u0433\u0438 (\u0438\u043b\u0438 \u043f\u0435\u0447\u0430\u0442\u043d\u043e\u0439) --genre \"Audiobook\" \\ --stik value = 2 \\ # 'Kind of Media' \u0442\u044d\u0433 \u0434\u043b\u044f iTunes --description \"made by highandmighty\" \\ --overWrite # \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 AtomicParsley"},{"location":"cmd-bash/#metaflac-shntool","text":"\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043e\u0431\u043b\u043e\u0436\u0435\u043a \u0444\u0430\u0439\u043b\u043e\u0432 .flac: metaflac --export-picture-to = \"cover.jpg\" \"file.flac\" # \u041e\u0434\u0438\u043d \u0444\u0430\u0439\u043b # \u0426\u0438\u043a\u043b \u043f\u043e \u0432\u0441\u0435\u043c \u0444\u0430\u0439\u043b\u0430\u043c .flac \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 for i in *.flac ; do [ -f \" $i \" ] || break metaflac --export-picture-to = \" ${ i /.flac/.jpg } \" \" $i \" done \u0414\u0435\u043b\u0435\u043d\u0438\u0435 .flac-\u0444\u0430\u0439\u043b\u0430 \u043f\u043e .cue-sheet: shnsplit -f input.cue -o flac input.flac","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 metaflac \u0438 shntool"},{"location":"cmd-bash/#mediainfo","text":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432\u0438\u0434\u0435\u043e\u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u043e \u043f\u0435\u0440\u0435\u0447\u043d\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0438\u0437 txt-\u0444\u0430\u0439\u043b\u0430 \u0432 \u0442\u043e\u0439 \u0436\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 --Inform= . @cd %~dp0 @mediainfo --Inform = file://mediainfo-paramerts.txt \"video file.mov\" @PAUSE mediainfo --Inform = \"General;Filename: %CompleteName%\" \"video file.mov\" \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 txt-\u0444\u0430\u0439\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 ( General; \u0438\u043b\u0438 Video; ). \u0421\u0430\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0431\u0440\u0430\u043c\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u043a\u0430\u043c\u0438 % . \u0412\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430: General;Filename: %CompleteName%\\nFormat: %Format%\\n Video;Pixel Format: %ChromaSubsampling%\\nColor Space: %ColorSpace%\" \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439: mediainfo --info-parameters","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 mediainfo"},{"location":"cmd-bash/#pandoc","text":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f Markdown \u0432 InDesign .icml: pandoc -s -f markdown -t icml -o \"output file.icml\" \"input file.md\" \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e Pandoc \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Setext-style headers, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0442\u0435\u043e\u0440\u0438\u0438 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u044e\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u0447\u043a\u0438. \u041f\u0440\u0438 \u0432\u044b\u0431\u043e\u0440\u0435 ATX-style headers ( --atx-headers ) \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u0447\u043a\u0438 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435. \u041f\u0440\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435 media-\u0444\u0430\u0439\u043b\u043e\u0432 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u043f\u0430\u043f\u043a\u0443 media \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043e\u043f\u0446\u0438\u0435\u0439 --extract-media=\"\" . \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f .docx \u0432 Markdown: pandoc -s -f docx -t markdown -o \"output file.md\" --atx-headers --wrap = none --extract-media = \"\" \"input file.docx\" \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 .epub \u0438\u0437 Markdown \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0434\u0432\u0443\u0445 \u0444\u0430\u0439\u043b\u043e\u0432: \u0442\u0435\u043a\u0441\u0442\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 Markdown \u0438 YAML-\u0444\u0430\u0439\u043b\u0430 \u0441 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 ( metadata.txt ). \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0432 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e EPUB 3: pandoc --atx-headers -t epub3 -o mybook.epub metadata.txt content.md --- title : - type : main text : \u0412\u0442\u043e\u0440\u043e\u0439 \u0446\u0438\u0444\u0440\u043e\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442 - type : subtitle text : \u041f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0440\u0430\u0437\u0443\u043c\u0430 creator : - role : author text : \u041c\u0430\u0440\u0438\u043e \u041a\u0430\u0440\u043f\u043e rights : softculture.cc language : ru-RU ...","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 pandoc"},{"location":"cmd-bash/#magick-gifsicle","text":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f .pdf \u0432 .png: magick convert -alpha off -density 600 -resize x1080 -depth 8 -quality 85 input.pdf output.png \u0422\u0435\u0441\u0442 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b: magick convert input.pdf [ 1 ] output.png \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e 2-\u0433\u043e \u043a\u0430\u0434\u0440\u0430 \u0432 .gif \u0441 gifsicle: # \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0444\u0440\u0435\u0439\u043c\u043e\u0432 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e numframes = ` identify -format \"%n\\n\" input.gif | head -1 ` # \u0423\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 1 \u0434\u043b\u044f \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441 seq numframes = ` expr $numframes - 1 ` # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0440\u0435\u0439\u043c\u0430 \u0441 gifsicle gifsicle input.gif --delete $( seq -f \"#%g\" 1 2 $numframes ) -o output.gif","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 magick \u0438 gifsicle"},{"location":"cmd-bash/#mac-os","text":"\u0412\u044b\u0432\u043e\u0434 \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0434\u0438\u0441\u043a\u043e\u0432: diskutil list \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0437\u0430 \u0434\u0438\u0441\u043a\u0430: sudo diskutil unmount /dev/disk\u0425 dd if = /dev/disk\u0425 of = output.iso # \u041c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u044f\u0442\u044c \u0434\u043e 30 \u043c\u0438\u043d\u0443\u0442 diskutil eject /dev/diskX # \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u0441\u043a\u0430","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0437\u0430 \u0434\u0438\u0441\u043a\u0430 (Mac OS)"},{"location":"cmd-bash/#youtube-dl","text":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0438\u0434\u0435\u043e \u0441 YouTube \u0441 youtube-dl: youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' '{FULL YOUTUBE URL}'","title":"Youtube-dl"},{"location":"example/","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . \u042d\u0442\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438 \u00ab\u0421\u043e\u0444\u0442 \u041a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\u00bb . \u041e\u043d\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u043d\u0430 Markdown \u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e MkDocs. Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"example/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org . \u042d\u0442\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438 \u00ab\u0421\u043e\u0444\u0442 \u041a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\u00bb . \u041e\u043d\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u043d\u0430 Markdown \u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e MkDocs.","title":"Welcome to MkDocs"},{"location":"example/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"example/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"instructions/","text":"\u041d\u0438\u0436\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e Markdown, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0445 \u043f\u0440\u0430\u0432\u0438\u043b \u0430\u0434\u0430\u043f\u0442\u0430\u0446\u0438\u0438 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 Markdown \u043f\u043e\u0434 \u043d\u0430\u0448\u0438 \u043d\u0443\u0436\u0434\u044b. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u00b6 \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0441\u0442\u0430\u0442\u0435\u0439 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0438\u0437 \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0432\u044b\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 (#) \u043c\u044b \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u0431\u0438\u0432\u0430\u0442\u044c \u0440\u0435\u0448\u0435\u0442\u043a\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438. # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 ## \u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a ### \u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 #### \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 #\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 ##\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a ###\u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 ####\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 \u00b6 \u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u00b6 \u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u00b6 \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u00b6 #\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 ##\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a ###\u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 ####\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u00b6 \u0416\u0438\u0440\u043d\u043e\u0435 **\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435** \u041a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 *\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435* \u0416\u0438\u0440\u043d\u043e\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f: \u0440\u043e\u043b\u0435\u0439, \u044f\u0440\u043b\u044b\u043a\u043e\u0432, \u043f\u0443\u0442\u0435\u0439 \u0444\u0430\u0439\u043b\u043e\u0432 `\u041c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u043a\u0443\u0440\u0441\u043e\u0432` \u0412\u0438\u0434\u0435\u043e\u0440\u043e\u043b\u0438\u043a `video` `SC_work\\[\u0418\u043c\u044f \u043a\u0443\u0440\u0430\u0442\u043e\u0440\u0430]\\[\u0428\u0438\u0444\u0440 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b]\\[\u041f\u043e\u043b\u043d\u044b\u0439 \u0448\u0438\u0444\u0440]_promo` \u041c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u043a\u0443\u0440\u0441\u043e\u0432 \u0412\u0438\u0434\u0435\u043e\u0440\u043e\u043b\u0438\u043a video SC_work\\[\u0418\u043c\u044f \u043a\u0443\u0440\u0430\u0442\u043e\u0440\u0430]\\[\u0428\u0438\u0444\u0440 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b]\\[\u041f\u043e\u043b\u043d\u044b\u0439 \u0448\u0438\u0444\u0440]_promo \u0421\u0441\u044b\u043b\u043a\u0438 \u00b6 \u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c [\u0441\u0441\u044b\u043b\u043a\u0430](http://www.softculture.cc) \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c [\u0441\u0441\u044b\u043b\u043a\u0430](instructions/) \u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0421\u043f\u0438\u0441\u043a\u0438 \u00b6 \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u0434\u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0442\u0431\u0438\u0432\u0430\u044e\u0442\u0441\u044f 4-\u043c\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438. * \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0410 * \u042d\u043b\u0435\u043c\u0435\u043d\u0442 B * \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421 \u2022\u2022\u2022\u2022* \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421.1 \u2022\u2022\u2022\u2022* \u042d\u043b\u0435\u043c\u0435\u043d\u0442 C.2 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0410 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 B \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421.1 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 C.2 \u041e\u0442\u0431\u0438\u0432\u043a\u0430 \u00b6 *** \u041c\u0438\u043a\u0440\u043e\u0442\u0438\u043f\u043e\u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u00b6 \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u0441\u0442\u0440\u043e\u043a\u0438 \u0431\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f 2-\u043c\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0441\u0442\u0440\u043e\u043a\u0438. \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u0438\u043a\u043b\u0435\u0435\u0442\u0441\u044f \u043a \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439. \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443\u2022\u2022 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u043e\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u0441\u0442\u0430\u0432\u0438\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 &nbsp; (non-breaking space) ...\u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432. ...\u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421&nbsp;\u0435\u0433\u043e&nbsp;\u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432. \u0411\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u044b\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432. \u0411\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u044b\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432. \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u00b6 \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 Markdown \u043d\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0438\u043b\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439. \u0418\u0445 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0434\u0443\u043b\u044f Admonition. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439 Admonition \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0437\u0434\u0435\u0441\u044c . \u041c\u044b \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043b\u0438\u0441\u044c \u043e\u0431 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0432 Wiki \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0442\u0438\u043f\u043e\u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439: !!! done \"\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\" \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c !!! done \"\" \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0431\u0435\u0437 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 !!! fail \"\" \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 !!! summary \"\" \u0420\u0435\u0437\u044e\u043c\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 !!! note \"\" #### \u0417\u0430\u0434\u0430\u0447\u0430 \u0438\u0437 Wrike \u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0432 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 `\u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c` !!! attention \"\" \u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0430\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0431\u0435\u0437 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0417\u0430\u0434\u0430\u0447\u0430 \u0438\u0437 Wrike \u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0432 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u00b6 \u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c \u0420\u0435\u0437\u044e\u043c\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0430\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439","title":"Markdown"},{"location":"instructions/#_1","text":"\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0441\u0442\u0430\u0442\u0435\u0439 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0438\u0437 \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0432\u044b\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 (#) \u043c\u044b \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u0431\u0438\u0432\u0430\u0442\u044c \u0440\u0435\u0448\u0435\u0442\u043a\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438. # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 ## \u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a ### \u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 #### \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 #\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 ##\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a ###\u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 ####\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438","title":"\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438"},{"location":"instructions/#_2","text":"","title":"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438"},{"location":"instructions/#_3","text":"","title":"\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a"},{"location":"instructions/#_4","text":"","title":"\u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430"},{"location":"instructions/#_5","text":"#\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u044c\u0438 ##\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a ###\u041f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 ####\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438"},{"location":"instructions/#_6","text":"\u0416\u0438\u0440\u043d\u043e\u0435 **\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435** \u041a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 *\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435* \u0416\u0438\u0440\u043d\u043e\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f: \u0440\u043e\u043b\u0435\u0439, \u044f\u0440\u043b\u044b\u043a\u043e\u0432, \u043f\u0443\u0442\u0435\u0439 \u0444\u0430\u0439\u043b\u043e\u0432 `\u041c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u043a\u0443\u0440\u0441\u043e\u0432` \u0412\u0438\u0434\u0435\u043e\u0440\u043e\u043b\u0438\u043a `video` `SC_work\\[\u0418\u043c\u044f \u043a\u0443\u0440\u0430\u0442\u043e\u0440\u0430]\\[\u0428\u0438\u0444\u0440 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b]\\[\u041f\u043e\u043b\u043d\u044b\u0439 \u0448\u0438\u0444\u0440]_promo` \u041c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u043a\u0443\u0440\u0441\u043e\u0432 \u0412\u0438\u0434\u0435\u043e\u0440\u043e\u043b\u0438\u043a video SC_work\\[\u0418\u043c\u044f \u043a\u0443\u0440\u0430\u0442\u043e\u0440\u0430]\\[\u0428\u0438\u0444\u0440 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b]\\[\u041f\u043e\u043b\u043d\u044b\u0439 \u0448\u0438\u0444\u0440]_promo","title":"\u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f"},{"location":"instructions/#_7","text":"\u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c [\u0441\u0441\u044b\u043b\u043a\u0430](http://www.softculture.cc) \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c [\u0441\u0441\u044b\u043b\u043a\u0430](instructions/) \u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0412 \u0442\u0435\u043a\u0441\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442","title":"\u0421\u0441\u044b\u043b\u043a\u0438"},{"location":"instructions/#_8","text":"\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u0434\u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0442\u0431\u0438\u0432\u0430\u044e\u0442\u0441\u044f 4-\u043c\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438. * \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0410 * \u042d\u043b\u0435\u043c\u0435\u043d\u0442 B * \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421 \u2022\u2022\u2022\u2022* \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421.1 \u2022\u2022\u2022\u2022* \u042d\u043b\u0435\u043c\u0435\u043d\u0442 C.2 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0410 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 B \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0421.1 \u042d\u043b\u0435\u043c\u0435\u043d\u0442 C.2","title":"\u0421\u043f\u0438\u0441\u043a\u0438"},{"location":"instructions/#_9","text":"***","title":"\u041e\u0442\u0431\u0438\u0432\u043a\u0430"},{"location":"instructions/#_10","text":"\u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u0441\u0442\u0440\u043e\u043a\u0438 \u0431\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f 2-\u043c\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0441\u0442\u0440\u043e\u043a\u0438. \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u0438\u043a\u043b\u0435\u0435\u0442\u0441\u044f \u043a \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439. \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443\u2022\u2022 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0411\u0435\u0437 \u0430\u0431\u0437\u0430\u0446\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u041d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u043e\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u0441\u0442\u0430\u0432\u0438\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 &nbsp; (non-breaking space) ...\u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432. ...\u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421&nbsp;\u0435\u0433\u043e&nbsp;\u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432. \u0411\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u044b\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432. \u0411\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0435\u0440\u0430\u0437\u0440\u044b\u0432\u043d\u044b\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u0421 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u043b\u043e\u0432.","title":"\u041c\u0438\u043a\u0440\u043e\u0442\u0438\u043f\u043e\u0433\u0440\u0430\u0444\u0438\u043a\u0430"},{"location":"instructions/#_11","text":"\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 Markdown \u043d\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0438\u043b\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439. \u0418\u0445 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0434\u0443\u043b\u044f Admonition. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439 Admonition \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0437\u0434\u0435\u0441\u044c . \u041c\u044b \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043b\u0438\u0441\u044c \u043e\u0431 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0432 Wiki \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0442\u0438\u043f\u043e\u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439: !!! done \"\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\" \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c !!! done \"\" \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0431\u0435\u0437 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 !!! fail \"\" \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 !!! summary \"\" \u0420\u0435\u0437\u044e\u043c\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 !!! note \"\" #### \u0417\u0430\u0434\u0430\u0447\u0430 \u0438\u0437 Wrike \u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0432 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 `\u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c` !!! attention \"\" \u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0430\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0431\u0435\u0437 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435","title":"\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438"},{"location":"instructions/#wrike","text":"\u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c \u0420\u0435\u0437\u044e\u043c\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0430\u044e\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u0438\u0437 Wrike \u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0432 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438"},{"location":"intro/","text":"\u0421 \u0447\u0435\u0433\u043e \u043d\u0430\u0447\u0430\u0442\u044c? \u00b6 \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u043e\u0432\u0435\u0442\u0443\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0447\u043b\u0435\u043d\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0437\u0431\u043e\u0440 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b , \u0440\u0430\u0441\u0441\u043a\u0430\u0437 \u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u043c\u0435\u043d\u0430 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043c\u0435\u0436\u0434\u0443 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430\u043c\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0438\u043b\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u043f\u043e\u0441\u0442\u0430 . \u0414\u0430\u043b\u044c\u0448\u0435 \u043c\u044b \u0441\u043e\u0432\u0435\u0442\u0443\u0435\u043c \u043f\u0440\u043e\u0439\u0442\u0438\u0441\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u043a\u043e\u043c\u0430\u043d\u0434\u044b , \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u0442\u043e \u0437\u0430 \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442, \u0430 \u0443\u0436\u0435 \u043f\u043e\u0442\u043e\u043c \u043f\u043e \u043d\u0430 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c, \u043e\u0442\u043d\u043e\u0441\u044f\u0449\u0438\u043c\u0441\u044f \u043a \u043b\u0438\u0447\u043d\u043e \u0432\u0430\u0448\u0438\u043c \u0437\u0430\u0434\u0430\u0447\u0430\u043c. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b \u043a\u0443\u0440\u0430\u0442\u043e\u0440\u0430\u043c: Meetings tasks Before tasks After tasks \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438: \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0435 \u043a \u0437\u0430\u043d\u044f\u0442\u0438\u044e","title":"Intro"},{"location":"intro/#_1","text":"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u043e\u0432\u0435\u0442\u0443\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0447\u043b\u0435\u043d\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0437\u0431\u043e\u0440 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b , \u0440\u0430\u0441\u0441\u043a\u0430\u0437 \u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u043c\u0435\u043d\u0430 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043c\u0435\u0436\u0434\u0443 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430\u043c\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0438\u043b\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u043f\u043e\u0441\u0442\u0430 . \u0414\u0430\u043b\u044c\u0448\u0435 \u043c\u044b \u0441\u043e\u0432\u0435\u0442\u0443\u0435\u043c \u043f\u0440\u043e\u0439\u0442\u0438\u0441\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u043a\u043e\u043c\u0430\u043d\u0434\u044b , \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u0442\u043e \u0437\u0430 \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442, \u0430 \u0443\u0436\u0435 \u043f\u043e\u0442\u043e\u043c \u043f\u043e \u043d\u0430 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c, \u043e\u0442\u043d\u043e\u0441\u044f\u0449\u0438\u043c\u0441\u044f \u043a \u043b\u0438\u0447\u043d\u043e \u0432\u0430\u0448\u0438\u043c \u0437\u0430\u0434\u0430\u0447\u0430\u043c. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b \u043a\u0443\u0440\u0430\u0442\u043e\u0440\u0430\u043c: Meetings tasks Before tasks After tasks \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438: \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0435 \u043a \u0437\u0430\u043d\u044f\u0442\u0438\u044e","title":"\u0421 \u0447\u0435\u0433\u043e \u043d\u0430\u0447\u0430\u0442\u044c?"},{"location":"python-import/","text":"\u0418\u043c\u043f\u043e\u0440\u0442 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u00b6 \u0418\u043c\u043f\u043e\u0440\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439: import airtable_parser import xml_parser import courses_functions import s3_functions import sugar import grid help ( sugar ) \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0443\u0442\u0435\u0439 \u043a \u043c\u043e\u0434\u0443\u043b\u044f\u043c: import sys print ( ' \\n ' . join ( sys . path )) \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0441 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438 (\u043d\u0435\u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0443\u0442\u0438 \u043a \u043c\u043e\u0434\u0443\u043b\u044f\u043c \u0432 PYTHONPATH): import sys sys . path . append ( 'C:/Users/user/Google \u0414\u0438\u0441\u043a/_codes/modules/' ) \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432: from xml_parser import xmltodataframe from sugar import path from courses_functions import *","title":"\u0418\u043c\u043f\u043e\u0440\u0442 \u043c\u043e\u0434\u0443\u043b\u0435\u0439"},{"location":"python-import/#_1","text":"\u0418\u043c\u043f\u043e\u0440\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439: import airtable_parser import xml_parser import courses_functions import s3_functions import sugar import grid help ( sugar ) \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0443\u0442\u0435\u0439 \u043a \u043c\u043e\u0434\u0443\u043b\u044f\u043c: import sys print ( ' \\n ' . join ( sys . path )) \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0441 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438 (\u043d\u0435\u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0443\u0442\u0438 \u043a \u043c\u043e\u0434\u0443\u043b\u044f\u043c \u0432 PYTHONPATH): import sys sys . path . append ( 'C:/Users/user/Google \u0414\u0438\u0441\u043a/_codes/modules/' ) \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432: from xml_parser import xmltodataframe from sugar import path from courses_functions import *","title":"\u0418\u043c\u043f\u043e\u0440\u0442 \u043c\u043e\u0434\u0443\u043b\u0435\u0439"},{"location":"python-os/","text":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u00b6 os \u0438 glob \u00b6 \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: import os folder = 'C:/Users/user/Google \u0414\u0438\u0441\u043a/SC_Admin/' filename = 'README.md' filepath = 'C:/Users/user/Google \u0414\u0438\u0441\u043a/SC_Admin/README.md' filepath = os . path . join ( folder , filename ) \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441\u043a\u0440\u0438\u043f\u0442\u0430: folder = os . path . dirname ( os . path . realpath ( __file__ )) os . chdir ( folder ) print ( os . getcwd ()) \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0444\u0430\u0439\u043b\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435: if os . path . isfile ( filepath ): ... \u041f\u043e\u0438\u0441\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438: import glob for filename in glob . glob ( \"*.zip\" ): print ( filename ) \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430: os . unlink ( filepath ) \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438: # \u0412\u0430\u0440\u0438\u0430\u043d\u0442 1: \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439 from subprocess import call if os . path . isdir ( path ): call (( \"rmdir /S /Q \\\" \" + path + \" \\\" \" ), shell = True ) # \u0412\u0430\u0440\u0438\u0430\u043d\u0442 2: \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 read-only \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u0438 \u043f\u0430\u043f\u043a\u0430\u043c\u0438 import shutil if os . path . isdir ( path ): shutil . rmtree ( path ) io \u00b6 \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: import io bytes_buffer = io . BytesIO () # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 RAM bytes_buffer . write ( ... ) # \u0417\u0430\u043f\u0438\u0441\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u0430\u0439\u043b print ( bytes_buffer . tell ()) # \u041f\u0435\u0447\u0430\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0444\u0430\u0439\u043b\u0430, \u0432\u0435\u0440\u043d\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 bytes_buffer . seek ( 0 ) # \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043a \u043d\u0430\u0447\u0430\u043b\u0443 \u0444\u0430\u0439\u043b\u0430 print ( bytes_buffer . tell ()) # \u0412\u0435\u0440\u043d\u0435\u0442 0 bytes_buffer . read () # \u0427\u0442\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043c\u0435\u0441\u0442\u0430 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 print ( bytes_buffer . tell ()) # \u0412\u0435\u0440\u043d\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 bytes_buffer . close () # \u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u0447\u0442\u0435\u043d\u0438\u044f","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0444\u0430\u0439\u043b\u0430\u043c\u0438"},{"location":"python-os/#_1","text":"","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0444\u0430\u0439\u043b\u0430\u043c\u0438"},{"location":"python-os/#os-glob","text":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: import os folder = 'C:/Users/user/Google \u0414\u0438\u0441\u043a/SC_Admin/' filename = 'README.md' filepath = 'C:/Users/user/Google \u0414\u0438\u0441\u043a/SC_Admin/README.md' filepath = os . path . join ( folder , filename ) \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441\u043a\u0440\u0438\u043f\u0442\u0430: folder = os . path . dirname ( os . path . realpath ( __file__ )) os . chdir ( folder ) print ( os . getcwd ()) \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0444\u0430\u0439\u043b\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435: if os . path . isfile ( filepath ): ... \u041f\u043e\u0438\u0441\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438: import glob for filename in glob . glob ( \"*.zip\" ): print ( filename ) \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430: os . unlink ( filepath ) \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438: # \u0412\u0430\u0440\u0438\u0430\u043d\u0442 1: \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439 from subprocess import call if os . path . isdir ( path ): call (( \"rmdir /S /Q \\\" \" + path + \" \\\" \" ), shell = True ) # \u0412\u0430\u0440\u0438\u0430\u043d\u0442 2: \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 read-only \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u0438 \u043f\u0430\u043f\u043a\u0430\u043c\u0438 import shutil if os . path . isdir ( path ): shutil . rmtree ( path )","title":"os \u0438 glob"},{"location":"python-os/#io","text":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: import io bytes_buffer = io . BytesIO () # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 RAM bytes_buffer . write ( ... ) # \u0417\u0430\u043f\u0438\u0441\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u0430\u0439\u043b print ( bytes_buffer . tell ()) # \u041f\u0435\u0447\u0430\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0444\u0430\u0439\u043b\u0430, \u0432\u0435\u0440\u043d\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 bytes_buffer . seek ( 0 ) # \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043a \u043d\u0430\u0447\u0430\u043b\u0443 \u0444\u0430\u0439\u043b\u0430 print ( bytes_buffer . tell ()) # \u0412\u0435\u0440\u043d\u0435\u0442 0 bytes_buffer . read () # \u0427\u0442\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043c\u0435\u0441\u0442\u0430 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 print ( bytes_buffer . tell ()) # \u0412\u0435\u0440\u043d\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 bytes_buffer . close () # \u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u0447\u0442\u0435\u043d\u0438\u044f","title":"io"},{"location":"python-pandas/","text":"\u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043c\u043e\u0434\u0443\u043b\u0435\u043c pandas \u00b6 \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u00b6 \u0418\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 pickle \u0444\u0430\u0439\u043b\u043e\u0432: import pandas as pd pickle_path = 'C:/Users/user/Google \u0414\u0438\u0441\u043a/pickle_file.pkl' df = pd . read_pickle ( pickle_path ) import pandas as pd import requests from io import BytesIO pickle_url = 'http://127.0.0.1:5000/v1/get-s3-object?key=data/exports/courses.pkl' r = requests . get ( pickle_url ) if r . status_code == 200 : df = pd . read_pickle ( BytesIO ( r . content ), compression = None ) \u0418\u043c\u043f\u043e\u0440\u0442 \u0438\u0437 .xlsx: from useful_functions import path xls_path = path ( r 'C:\\Users\\user\\Google \u0414\u0438\u0441\u043a\\test.xlsx' ) colnames = [ 'A' , 'B' , 'C' , 'D' ] df = pd . read_excel ( xls_path , header = 7 , skiprows = [ 8 ], names = colnames ) \u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0432 .xlsx: from useful_functions import path , exportxlsx folder_path = path ( r 'C:\\Users\\user\\Google \u0414\u0438\u0441\u043a' ) # \u041f\u0443\u0442\u044c \u0432\u0438\u0434\u0430 'C:/Users/user/Google \u0414\u0438\u0441\u043a' exportxlsx ( df , folder_path , 'filename.xls' ) \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u00b6 df . head () df . head ( n = 5 ) # \u0412\u0435\u0440\u043d\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0435 5 \u0440\u044f\u0434\u043e\u0432 df . tail () df . dtypes # \u0412\u0435\u0440\u043d\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c df . columns # \u0412\u0435\u0440\u043d\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0444\u0440\u0435\u0439\u043c\u0430 df . index # \u0412\u0435\u0440\u043d\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0444\u0440\u0435\u0439\u043c\u0430 len ( df . index ) # \u041a\u043e\u043b-\u0432\u043e \u0440\u044f\u0434\u043e\u0432 \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u0438 +------------+---------+--------+ | | A | B | +------------+---------+--------- | 0 | 0.626386 | 1.52325 |---- axis = 1 ---- \u2192 +------------+---------+--------+ | | | axis = 0 | \u2193 \u2193 df . mean ( axis = 1 ) > 0 1.074821 df . mean ( axis = 0 ) > A 0.626386 > B 1.523255 \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00b6 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438: df . set_index ( 'id' , drop = True , inplace = True , verify_integrity = True ) # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 df . index . name = None # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 df . sort_index ( inplace = True ) # \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443 df . reset_index ( drop = True , inplace = True ) # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 drop=False \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 df . drop ( index_list , inplace = True ) # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043e\u043a: df = DataFrame ( data , columns = [ 'A' , 'B' , 'C' ]) colnames = { 'A' : 'A_new' , 'B' : 'B_new' , 'D' : 'D_new' } df . rename ( index = str , columns = colnames , inplace = True ) df . columns # \u0412\u0435\u0440\u043d\u0435\u0442 ['A_new', 'B_new', 'C'] df = df . reindex_axis ( sorted ( df . columns ), axis = 1 ) # \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043a\u043e\u043b\u043e\u043d\u043e\u043a df . drop ([ 'B' , '\u0421' ], axis = 1 , inplace = True ) # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 '\u0421' df . insert ( 9 , 'D' , column_series ) # \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432: df . sort_values ([ 'A' , 'B' ], ascending = [ False , False ], inplace = True ) df . sort_values ([ 'A' , 'B' ], ascending = [ False , False ], inplace = True ) df . loc [ indexes ] # \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443/\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c df . iloc [ n ] # \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u043e\u043c\u0443 \u043d\u043e\u043c\u0435\u0440\u0443 \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 NA: df [[ 'A' , 'B' ]] . fillna ( value = 0 , inplace = True ) # \u0417\u0430\u043c\u0435\u043d\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c '0' df [ 'A' ] . fillna ( df [ 'B' ], inplace = True ) # \u0417\u0430\u043c\u0435\u043d\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 '\u0410' \u0434\u0430\u043d\u043d\u044b\u043c \u0438\u0437 'B' \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438: df [ 'A' ] . where ( df [ 'B' ] != 1000 , 0 , inplace = True ) from numpy import where df [ 'A' ] = where ( df [ 'B' ] == 0 , \"A\" , \"B\" ) df [ 'B' ] = where ( df [ 'A' ] > 0 , series_A , series_B ) from numpy import around df [ 'A' ] = around ( df [ 'A' ], - 2 ) # \u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0434\u043e 100 \u0426\u0438\u043a\u043b \u043f\u043e \u0440\u044f\u0434\u0430\u043c: for index , row in df . iterrows (): print ( index ) print ( row [ 'A' ]) \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u00b6 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0430\u0441\u043e\u043a: df = df [ df [ 'date_col' ] == 'value' ] # \u0412\u044b\u0431\u043e\u0440 \u043f\u043e \u0431\u0435\u0437 \u043c\u0430\u0441\u043a\u0438 mask_1 = df [ 'col_1' ] == 'value_1' mask_2 = df [ 'col_2' ] < 'value_2' df_new = df [ mask_1 & mask_2 ] . copy () # \u0412\u044b\u0431\u043e\u0440 \u0441 \u043c\u0430\u0441\u043a\u0430\u043c\u0438 df_new = df [ mask_1 | mask_2 ] . copy () # \u0412\u044b\u0431\u043e\u0440 \u0441 \u043c\u0430\u0441\u043a\u0430\u043c\u0438 mask_null = pd . isnull ( df [ 'A' ]) not_null = df [ ~ mask_null ] . copy () mask_dup = df . duplicated ( subset = [ 'A' ], keep = False ) df [ mask_dup ] \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438: df [ 'date' ] = pd . to_datetime ( df [ 'string' ], format = '%m/ %d /%Y %H:%M:%S' ) df [ 'string' ] = df [ 'date' ] . dt . strftime ( '%b %Y' ) df [ 'delta' ] = ( today - df [ 'date' ]) . dt . days mask_date = df [ 'date' ] > '2016-02-01' # \u0412\u044b\u0431\u043e\u0440 \u043f\u043e \u0434\u0430\u0442\u0435 month = 7 mask_date = df [ 'date' ] . dt . strftime ( '%m' ) . astype ( int ) == month # \u0412\u044b\u0431\u043e\u0440 \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0443 (%m), \u0433\u043e\u0434\u0443 (%Y) \u0438 \u043f\u0440. df [ 'month' ] = pd . to_datetime ( df [ 'date' ] . dt . strftime ( '%Y-%m-' ) + '01' , \\ format = '%Y-%m- %d ' ) # \u0412\u044b\u0447\u043b\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0435\u0441\u044f\u0446\u0430 \u0438\u0437 \u0434\u0430\u0442\u044b \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 NA: df . dropna ( axis = 0 , how = 'any' , subset = [ 'col_1' , 'col_2' ], inplace = True ) # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u0441 NA \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 \u0410\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u00b6 \u041e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439: df_stats = df . groupby ([ 'A' ]) . agg ({ 'B' : np . sum }) df_stats . index . name = None # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u041d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438: df_stats = df . groupby ([ 'A' , 'B' ]) . agg ({ 'C' : [ 'count' , 'sum' ], 'D' : [ np . mean , np . max ] }) . reset_index () \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445: df_full = pd . concat ([ df_1 , df_2 ], axis = 1 , join_axes = [ df_1 . index ]) # \u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443 \u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438 \u00b6 \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043d\u043e: def function ( string ): if string != string : # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 NaN return np . nan else : return string + '2' df [ 'new' ] = df [ 'old' ] . apply ( function ) # \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0431\u044b\u0447\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043d\u043e df [ 'is_url' ] . apply ( lambda x : str ( x ) . startswith ( 'http' )) # \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 lambda-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 df [ 'B' ] = df [ 'A' ] . map ( lambda s : s * 2 , na_action = 'ignore' ) # \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c! \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043a \u0440\u044f\u0434\u0430\u043c: def function ( row ): return row [ 'A' ] + row [ 'B' ] df [ 'C' ] = df . apply ( function , axis = 1 ) \u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438: def attrFinder ( key , attrDic , attrNum ): if key in attrDic : return attrDic [ key ][ attrNum ] else : return attrDic [ 0 ][ attrNum ] attr_dict = { 1 : [ 'attr_A_1' , 'attr_B_2' , 3 ], # \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0438\u0434\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 2 : [ 'attr_A_2' , 'attr_B_1' , 1 ], 3 : [ 'attr_A_3' , 'attr_B_1' , 2 ], 0 : [ 'attr_A_default' , 'attr_B_default' , 4 ]} df [ 'attr_A_col' ] = df [ 'key_col' ] . apply ( attrFinder , args = ( attr_dict , 0 ,)) df [ 'position_col' ] = df [ 'key_col' ] . apply ( attrFinder , args = ( attr_dict , 3 ,)) df . sort_values ( 'position_col' , inplace = True ) # \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0443 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0421\u043b\u043e\u0436\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438 \u00b6 \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443 intersect = df_1 . index . intersection ( df_2 . index ) # \u0412\u044b\u0447\u043b\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0431\u0449\u0438\u0445 \u0434\u043b\u044f \u0434\u0432\u0443\u0445 \u0442\u0430\u0431\u043b\u0438\u0446 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 second_only = df_2 . index . difference ( df_1 . index ) # \u0418\u043d\u0434\u0435\u043a\u0441\u044b, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 df_2 . loc [ second_only ] # \u0420\u044f\u0434\u044b, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 (slice) new_1 = df_1 . loc [ intersect ] . copy () # \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043f\u0438\u0438 new_2 = df_2 . loc [ intersect ] . copy () mask_changed = ( new_1 != new_2 ) . any ( 1 ) # \u041c\u0430\u0441\u043a\u0430 \u043f\u043e \u0440\u044f\u0434\u0430\u043c \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0445\u043e\u0442\u044f \u0431\u044b \u0432 \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 # \u041e\u0431\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u0438\u043c\u0435\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u044b # \u0438 \u0431\u044b\u0442\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u043e \u043d\u0438\u043c new_2 [ mask_changed ] # \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0435 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043f\u0435\u0440\u0432\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u0440\u044f\u0434\u044b","title":"\u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python-pandas/#pandas","text":"","title":"\u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043c\u043e\u0434\u0443\u043b\u0435\u043c pandas"},{"location":"python-pandas/#_1","text":"\u0418\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 pickle \u0444\u0430\u0439\u043b\u043e\u0432: import pandas as pd pickle_path = 'C:/Users/user/Google \u0414\u0438\u0441\u043a/pickle_file.pkl' df = pd . read_pickle ( pickle_path ) import pandas as pd import requests from io import BytesIO pickle_url = 'http://127.0.0.1:5000/v1/get-s3-object?key=data/exports/courses.pkl' r = requests . get ( pickle_url ) if r . status_code == 200 : df = pd . read_pickle ( BytesIO ( r . content ), compression = None ) \u0418\u043c\u043f\u043e\u0440\u0442 \u0438\u0437 .xlsx: from useful_functions import path xls_path = path ( r 'C:\\Users\\user\\Google \u0414\u0438\u0441\u043a\\test.xlsx' ) colnames = [ 'A' , 'B' , 'C' , 'D' ] df = pd . read_excel ( xls_path , header = 7 , skiprows = [ 8 ], names = colnames ) \u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0432 .xlsx: from useful_functions import path , exportxlsx folder_path = path ( r 'C:\\Users\\user\\Google \u0414\u0438\u0441\u043a' ) # \u041f\u0443\u0442\u044c \u0432\u0438\u0434\u0430 'C:/Users/user/Google \u0414\u0438\u0441\u043a' exportxlsx ( df , folder_path , 'filename.xls' )","title":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python-pandas/#_2","text":"df . head () df . head ( n = 5 ) # \u0412\u0435\u0440\u043d\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0435 5 \u0440\u044f\u0434\u043e\u0432 df . tail () df . dtypes # \u0412\u0435\u0440\u043d\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c df . columns # \u0412\u0435\u0440\u043d\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0444\u0440\u0435\u0439\u043c\u0430 df . index # \u0412\u0435\u0440\u043d\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0444\u0440\u0435\u0439\u043c\u0430 len ( df . index ) # \u041a\u043e\u043b-\u0432\u043e \u0440\u044f\u0434\u043e\u0432 \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u0438 +------------+---------+--------+ | | A | B | +------------+---------+--------- | 0 | 0.626386 | 1.52325 |---- axis = 1 ---- \u2192 +------------+---------+--------+ | | | axis = 0 | \u2193 \u2193 df . mean ( axis = 1 ) > 0 1.074821 df . mean ( axis = 0 ) > A 0.626386 > B 1.523255","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python-pandas/#_3","text":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438: df . set_index ( 'id' , drop = True , inplace = True , verify_integrity = True ) # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 df . index . name = None # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 df . sort_index ( inplace = True ) # \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443 df . reset_index ( drop = True , inplace = True ) # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 drop=False \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 df . drop ( index_list , inplace = True ) # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043e\u043a: df = DataFrame ( data , columns = [ 'A' , 'B' , 'C' ]) colnames = { 'A' : 'A_new' , 'B' : 'B_new' , 'D' : 'D_new' } df . rename ( index = str , columns = colnames , inplace = True ) df . columns # \u0412\u0435\u0440\u043d\u0435\u0442 ['A_new', 'B_new', 'C'] df = df . reindex_axis ( sorted ( df . columns ), axis = 1 ) # \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043a\u043e\u043b\u043e\u043d\u043e\u043a df . drop ([ 'B' , '\u0421' ], axis = 1 , inplace = True ) # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 '\u0421' df . insert ( 9 , 'D' , column_series ) # \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432: df . sort_values ([ 'A' , 'B' ], ascending = [ False , False ], inplace = True ) df . sort_values ([ 'A' , 'B' ], ascending = [ False , False ], inplace = True ) df . loc [ indexes ] # \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443/\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c df . iloc [ n ] # \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u043e\u043c\u0443 \u043d\u043e\u043c\u0435\u0440\u0443 \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 NA: df [[ 'A' , 'B' ]] . fillna ( value = 0 , inplace = True ) # \u0417\u0430\u043c\u0435\u043d\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c '0' df [ 'A' ] . fillna ( df [ 'B' ], inplace = True ) # \u0417\u0430\u043c\u0435\u043d\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 '\u0410' \u0434\u0430\u043d\u043d\u044b\u043c \u0438\u0437 'B' \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438: df [ 'A' ] . where ( df [ 'B' ] != 1000 , 0 , inplace = True ) from numpy import where df [ 'A' ] = where ( df [ 'B' ] == 0 , \"A\" , \"B\" ) df [ 'B' ] = where ( df [ 'A' ] > 0 , series_A , series_B ) from numpy import around df [ 'A' ] = around ( df [ 'A' ], - 2 ) # \u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0434\u043e 100 \u0426\u0438\u043a\u043b \u043f\u043e \u0440\u044f\u0434\u0430\u043c: for index , row in df . iterrows (): print ( index ) print ( row [ 'A' ])","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"},{"location":"python-pandas/#_4","text":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0430\u0441\u043e\u043a: df = df [ df [ 'date_col' ] == 'value' ] # \u0412\u044b\u0431\u043e\u0440 \u043f\u043e \u0431\u0435\u0437 \u043c\u0430\u0441\u043a\u0438 mask_1 = df [ 'col_1' ] == 'value_1' mask_2 = df [ 'col_2' ] < 'value_2' df_new = df [ mask_1 & mask_2 ] . copy () # \u0412\u044b\u0431\u043e\u0440 \u0441 \u043c\u0430\u0441\u043a\u0430\u043c\u0438 df_new = df [ mask_1 | mask_2 ] . copy () # \u0412\u044b\u0431\u043e\u0440 \u0441 \u043c\u0430\u0441\u043a\u0430\u043c\u0438 mask_null = pd . isnull ( df [ 'A' ]) not_null = df [ ~ mask_null ] . copy () mask_dup = df . duplicated ( subset = [ 'A' ], keep = False ) df [ mask_dup ] \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438: df [ 'date' ] = pd . to_datetime ( df [ 'string' ], format = '%m/ %d /%Y %H:%M:%S' ) df [ 'string' ] = df [ 'date' ] . dt . strftime ( '%b %Y' ) df [ 'delta' ] = ( today - df [ 'date' ]) . dt . days mask_date = df [ 'date' ] > '2016-02-01' # \u0412\u044b\u0431\u043e\u0440 \u043f\u043e \u0434\u0430\u0442\u0435 month = 7 mask_date = df [ 'date' ] . dt . strftime ( '%m' ) . astype ( int ) == month # \u0412\u044b\u0431\u043e\u0440 \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0443 (%m), \u0433\u043e\u0434\u0443 (%Y) \u0438 \u043f\u0440. df [ 'month' ] = pd . to_datetime ( df [ 'date' ] . dt . strftime ( '%Y-%m-' ) + '01' , \\ format = '%Y-%m- %d ' ) # \u0412\u044b\u0447\u043b\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0435\u0441\u044f\u0446\u0430 \u0438\u0437 \u0434\u0430\u0442\u044b \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 NA: df . dropna ( axis = 0 , how = 'any' , subset = [ 'col_1' , 'col_2' ], inplace = True ) # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u0441 NA \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445","title":"\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python-pandas/#_5","text":"\u041e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439: df_stats = df . groupby ([ 'A' ]) . agg ({ 'B' : np . sum }) df_stats . index . name = None # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u041d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438: df_stats = df . groupby ([ 'A' , 'B' ]) . agg ({ 'C' : [ 'count' , 'sum' ], 'D' : [ np . mean , np . max ] }) . reset_index () \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445: df_full = pd . concat ([ df_1 , df_2 ], axis = 1 , join_axes = [ df_1 . index ]) # \u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443","title":"\u0410\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python-pandas/#_6","text":"\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043d\u043e: def function ( string ): if string != string : # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 NaN return np . nan else : return string + '2' df [ 'new' ] = df [ 'old' ] . apply ( function ) # \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0431\u044b\u0447\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043d\u043e df [ 'is_url' ] . apply ( lambda x : str ( x ) . startswith ( 'http' )) # \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 lambda-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 df [ 'B' ] = df [ 'A' ] . map ( lambda s : s * 2 , na_action = 'ignore' ) # \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c! \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043a \u0440\u044f\u0434\u0430\u043c: def function ( row ): return row [ 'A' ] + row [ 'B' ] df [ 'C' ] = df . apply ( function , axis = 1 ) \u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438: def attrFinder ( key , attrDic , attrNum ): if key in attrDic : return attrDic [ key ][ attrNum ] else : return attrDic [ 0 ][ attrNum ] attr_dict = { 1 : [ 'attr_A_1' , 'attr_B_2' , 3 ], # \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0438\u0434\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 2 : [ 'attr_A_2' , 'attr_B_1' , 1 ], 3 : [ 'attr_A_3' , 'attr_B_1' , 2 ], 0 : [ 'attr_A_default' , 'attr_B_default' , 4 ]} df [ 'attr_A_col' ] = df [ 'key_col' ] . apply ( attrFinder , args = ( attr_dict , 0 ,)) df [ 'position_col' ] = df [ 'key_col' ] . apply ( attrFinder , args = ( attr_dict , 3 ,)) df . sort_values ( 'position_col' , inplace = True ) # \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0443 \u043f\u043e\u0437\u0438\u0446\u0438\u0438","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438"},{"location":"python-pandas/#_7","text":"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443 intersect = df_1 . index . intersection ( df_2 . index ) # \u0412\u044b\u0447\u043b\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0431\u0449\u0438\u0445 \u0434\u043b\u044f \u0434\u0432\u0443\u0445 \u0442\u0430\u0431\u043b\u0438\u0446 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 second_only = df_2 . index . difference ( df_1 . index ) # \u0418\u043d\u0434\u0435\u043a\u0441\u044b, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 df_2 . loc [ second_only ] # \u0420\u044f\u0434\u044b, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 (slice) new_1 = df_1 . loc [ intersect ] . copy () # \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043f\u0438\u0438 new_2 = df_2 . loc [ intersect ] . copy () mask_changed = ( new_1 != new_2 ) . any ( 1 ) # \u041c\u0430\u0441\u043a\u0430 \u043f\u043e \u0440\u044f\u0434\u0430\u043c \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0445\u043e\u0442\u044f \u0431\u044b \u0432 \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 # \u041e\u0431\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u0438\u043c\u0435\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u044b # \u0438 \u0431\u044b\u0442\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u043e \u043d\u0438\u043c new_2 [ mask_changed ] # \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0435 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043f\u0435\u0440\u0432\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u0440\u044f\u0434\u044b","title":"\u0421\u043b\u043e\u0436\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438"},{"location":"python-pipenv/","text":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Pipenv \u00b6 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430: cd my-project pipenv install \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439: pipenv install requests pipenv install pyinstaller \u0417\u0430\u043f\u0443\u0441\u043a \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432 \u0441\u0440\u0435\u0434\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430: pipenv run python script.py pipenv run pyinstaller --onefile --console -i icon.ico script.py \u041f\u0435\u0440\u0435\u0445\u043e\u0434 \u0432 \u0441\u0440\u0435\u0434\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 pipenv shell exit","title":"\u0421\u0440\u0435\u0434\u0430"},{"location":"python-pipenv/#pipenv","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430: cd my-project pipenv install \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439: pipenv install requests pipenv install pyinstaller \u0417\u0430\u043f\u0443\u0441\u043a \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432 \u0441\u0440\u0435\u0434\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430: pipenv run python script.py pipenv run pyinstaller --onefile --console -i icon.ico script.py \u041f\u0435\u0440\u0435\u0445\u043e\u0434 \u0432 \u0441\u0440\u0435\u0434\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 pipenv shell exit","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Pipenv"},{"location":"python-regex/","text":"\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u044b\u043d\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u00b6 RegEx \u00b6 \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b import re string = 'this is a test string!' m = re . match ( '\\w+\\s\\w+' , string ) # 'this is' from the beginning of string s = re . search ( '\\w+\\s\\w+!' , string ) # 'test string!' everywhere in the string string = re . sub ( ' \\w{2} ' , ' was ' , string ) # 'this was a test string!' if m : # Checks if string matches Regex print ( m [ 0 ]) # Prints first match \u0421\u043b\u043e\u0436\u043d\u044b\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f code = 'SKC_20.19.03_L1_Basics.mp4' m1 = re . match ( '^[A-Z]{3}_\\d+\\.\\d+.\\d+' , code ) # 'SKC_20.19.03' m2 = re . match ( 'L\\d+(?:-\\d+)*_[\\w\\. ]+\\.mp4$' ) # 'L1_Basics.mp4' # 'L\\d+' \u2192 'L1', 'L21' # '(?:-\\d+)*' \u2192 '', '-1', '-21', '-21-32' # 'L\\d+(?:-\\d+)*' \u2192 'L1', 'L1-2' # '\\w+' \u2192 'Word' # '[\\w\\. ]+' \u2192 'Any word. Or space. Or dot' # '\\.mp4$' \u2192 '.mp4' at the end of line \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 string = 'abab ded cfc' m = re . match ( '(ab)+ \\w+ (\\w+)' , string ) # 'abab ded cfc' m . group ( 1 ) # 'ab' (in first parenthesis) m . group ( 2 ) # 'cfc' (in second parenthesis) m = re . match ( '(?:ab)+ \\w+ (\\w+)' , string ) m . group ( 1 ) # 'cfc' (first parenthesis are omitted because of ? \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430 string = '\u0412\u043e\u0442 \u043e\u043d\u0430 \u0441\u0442\u0440\u043e\u0447\u043a\u0430!' m = re . match ( '[\\w ]+!' , string , re . U ) # \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e Unicode print ( bool ( m )) # \u0412\u0435\u0440\u043d\u0435\u0442 True m = re . match ( '[\\w ]+!' , string , re . A ) # \u041d\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c ASCII print ( bool ( m )) # \u0412\u0435\u0440\u043d\u0435\u0442 False Titlecase \u00b6 from titlecase import titlecase titlecase ( 'Loath and fear in USSR' ) # \u0412\u0435\u0440\u043d\u0435\u0442 'Loath and Fear in USSR'","title":"\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f"},{"location":"python-regex/#_1","text":"","title":"\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u044b\u043d\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c"},{"location":"python-regex/#regex","text":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b import re string = 'this is a test string!' m = re . match ( '\\w+\\s\\w+' , string ) # 'this is' from the beginning of string s = re . search ( '\\w+\\s\\w+!' , string ) # 'test string!' everywhere in the string string = re . sub ( ' \\w{2} ' , ' was ' , string ) # 'this was a test string!' if m : # Checks if string matches Regex print ( m [ 0 ]) # Prints first match \u0421\u043b\u043e\u0436\u043d\u044b\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f code = 'SKC_20.19.03_L1_Basics.mp4' m1 = re . match ( '^[A-Z]{3}_\\d+\\.\\d+.\\d+' , code ) # 'SKC_20.19.03' m2 = re . match ( 'L\\d+(?:-\\d+)*_[\\w\\. ]+\\.mp4$' ) # 'L1_Basics.mp4' # 'L\\d+' \u2192 'L1', 'L21' # '(?:-\\d+)*' \u2192 '', '-1', '-21', '-21-32' # 'L\\d+(?:-\\d+)*' \u2192 'L1', 'L1-2' # '\\w+' \u2192 'Word' # '[\\w\\. ]+' \u2192 'Any word. Or space. Or dot' # '\\.mp4$' \u2192 '.mp4' at the end of line \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 string = 'abab ded cfc' m = re . match ( '(ab)+ \\w+ (\\w+)' , string ) # 'abab ded cfc' m . group ( 1 ) # 'ab' (in first parenthesis) m . group ( 2 ) # 'cfc' (in second parenthesis) m = re . match ( '(?:ab)+ \\w+ (\\w+)' , string ) m . group ( 1 ) # 'cfc' (first parenthesis are omitted because of ? \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430 string = '\u0412\u043e\u0442 \u043e\u043d\u0430 \u0441\u0442\u0440\u043e\u0447\u043a\u0430!' m = re . match ( '[\\w ]+!' , string , re . U ) # \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e Unicode print ( bool ( m )) # \u0412\u0435\u0440\u043d\u0435\u0442 True m = re . match ( '[\\w ]+!' , string , re . A ) # \u041d\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c ASCII print ( bool ( m )) # \u0412\u0435\u0440\u043d\u0435\u0442 False","title":"RegEx"},{"location":"python-regex/#titlecase","text":"from titlecase import titlecase titlecase ( 'Loath and fear in USSR' ) # \u0412\u0435\u0440\u043d\u0435\u0442 'Loath and Fear in USSR'","title":"Titlecase"},{"location":"python-utilities/","text":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0431\u0430\u0437\u043e\u0432\u044b\u043c\u0438 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438 \u00b6 os \u0438 sys \u00b6 \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u044b: import os if 'ACCESS_KEY' in os . environ : print ( \"Super\" ) print ( os . environ [ 'ACCESS_KEY' ]) else : print ( \"Nope\" ) secret_key = os . environ . get ( 'SECRET_KEY' , '123' ) # \u0415\u0441\u043b\u0438 'SECRET_KEY' \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0441\u0440\u0435\u0434\u0435, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f '123' \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 PYTHONPATH import sys sys . path . append ( 'C:/Users/user/Google \u0414\u0438\u0441\u043a/_codes/modules/' ) # \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0443\u0442\u0438 \u043a \u043c\u043e\u0434\u0443\u043b\u044e \u0432 PYTHONPATH \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0441\u0435\u0441\u0441\u0438\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u041e\u0421 from sys import platform if platform == \"win32\" : os . system ( 'dir' ) # Windows script elif platform == \"darwin\" : os . system ( 'ls' ) # OS X script datetime \u00b6 \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: import datetime as dt date = dt . datetime . strptime ( '2017-12-31' , '%Y-%m- %d ' ) today_date = dt . date . today () # Today date today_timestamp = dt . datetime . today () # Today date delta = ( today_date - date . date ()) . days delta = ( today_timestamp - date ) . days # \u041e\u0431\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b yesterday = today - dt . timedelta ( days = 1 ) now = dt . datetime . now () # Now timestamp now . date () # Returns date only now . isoweekday () # \u0412\u0435\u0440\u043d\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438 (Monday is 1 and Sunday is 7) \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e: now_string = now . strftime ( \" %d -%m-%Y %H:%M:%S\" ) # DD-MM-YYYY HH:MM:SS string representation date = dt . datetime . strptime ( date_string , '%Y-%m- %d T%H:%M:%S' ) \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u0437\u043e\u043d\u0430\u043c\u0438: from pytz import timezone tz = timezone ( 'Europe/Moscow' ) now = dt . datetime . now ( tz ) now = now . replace ( tzinfo = None ) now_moscow = now_utc . astimezone ( tz ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f timezone subprocess \u00b6 \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: from subprocess import call call ( \"start notepad.exe\" , shell = True ) # call \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 exit-\u043a\u043e\u0434 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0442.\u0435. 0 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f import subprocess command = \"echo hello world\" s = subprocess . run ( command , shell = True , \\ stderr = subprocess . PIPE , stdout = subprocess . PIPE , \\ check = False ) output = s . stdout . decode ( 'cp1251' ) . strip () # by default string ends new line (\\r\\n) error = s . returncode # returns 0 if scripts finished without errors termcolor \u00b6 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430 \u0432 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435: from termcolor import colored from colorama import init init () print ( colored ( 'doing something...' , 'white' ), end = ' ' ) print ( colored ( 'done' , 'green' ))","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438"},{"location":"python-utilities/#_1","text":"","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0431\u0430\u0437\u043e\u0432\u044b\u043c\u0438 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438"},{"location":"python-utilities/#os-sys","text":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u044b: import os if 'ACCESS_KEY' in os . environ : print ( \"Super\" ) print ( os . environ [ 'ACCESS_KEY' ]) else : print ( \"Nope\" ) secret_key = os . environ . get ( 'SECRET_KEY' , '123' ) # \u0415\u0441\u043b\u0438 'SECRET_KEY' \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0441\u0440\u0435\u0434\u0435, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f '123' \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 PYTHONPATH import sys sys . path . append ( 'C:/Users/user/Google \u0414\u0438\u0441\u043a/_codes/modules/' ) # \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0443\u0442\u0438 \u043a \u043c\u043e\u0434\u0443\u043b\u044e \u0432 PYTHONPATH \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0441\u0435\u0441\u0441\u0438\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u041e\u0421 from sys import platform if platform == \"win32\" : os . system ( 'dir' ) # Windows script elif platform == \"darwin\" : os . system ( 'ls' ) # OS X script","title":"os \u0438 sys"},{"location":"python-utilities/#datetime","text":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: import datetime as dt date = dt . datetime . strptime ( '2017-12-31' , '%Y-%m- %d ' ) today_date = dt . date . today () # Today date today_timestamp = dt . datetime . today () # Today date delta = ( today_date - date . date ()) . days delta = ( today_timestamp - date ) . days # \u041e\u0431\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b yesterday = today - dt . timedelta ( days = 1 ) now = dt . datetime . now () # Now timestamp now . date () # Returns date only now . isoweekday () # \u0412\u0435\u0440\u043d\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438 (Monday is 1 and Sunday is 7) \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e: now_string = now . strftime ( \" %d -%m-%Y %H:%M:%S\" ) # DD-MM-YYYY HH:MM:SS string representation date = dt . datetime . strptime ( date_string , '%Y-%m- %d T%H:%M:%S' ) \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u0437\u043e\u043d\u0430\u043c\u0438: from pytz import timezone tz = timezone ( 'Europe/Moscow' ) now = dt . datetime . now ( tz ) now = now . replace ( tzinfo = None ) now_moscow = now_utc . astimezone ( tz ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f timezone","title":"datetime"},{"location":"python-utilities/#subprocess","text":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: from subprocess import call call ( \"start notepad.exe\" , shell = True ) # call \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 exit-\u043a\u043e\u0434 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0442.\u0435. 0 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f import subprocess command = \"echo hello world\" s = subprocess . run ( command , shell = True , \\ stderr = subprocess . PIPE , stdout = subprocess . PIPE , \\ check = False ) output = s . stdout . decode ( 'cp1251' ) . strip () # by default string ends new line (\\r\\n) error = s . returncode # returns 0 if scripts finished without errors","title":"subprocess"},{"location":"python-utilities/#termcolor","text":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430 \u0432 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435: from termcolor import colored from colorama import init init () print ( colored ( 'doing something...' , 'white' ), end = ' ' ) print ( colored ( 'done' , 'green' ))","title":"termcolor"},{"location":"shortcuts-mac/","text":"Basic Settings via Preferences \u00b6 \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u0432 System Preferences/Keyboard/Shortcuts . \u0414\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u043a\u043b\u0430\u0432\u0438\u0448, \u0435\u0441\u043b\u0438 \u044d\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0435 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442 \u043e\u0434\u043d\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435. Input Sources \u00b6 F9 : Select the previous input source (\u0434\u043b\u044f \u0437\u0430\u043c\u0435\u043d\u044b \u21ea \u043d\u0430 F9 \u0432 Karabiner Elements) Spotlight \u00b6 disabled : Show Spotlight search (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u2318Space \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u044f\u0437\u044b\u043a\u0430 \u0432 Punto Switcher) Accessabilty \u00b6 disabled : Turn VoiceOver on or off (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u2318F5 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u043b\u043a\u043b\u0430\u0434\u043a\u0438 fman) App Shortcuts \u00b6 All Applications: \u2318Q : Quit \u2318] : Toggle Full Screen \u2318] : Exit Full Screen \u2318] : Enter Full Screen Google Chrome: F5 : Reload This Page \u2318D : Select Previous Tab \u2318F : Select Next Tab \u2318N : New Tab \u21e7\u2318F : Find... (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u2318F \u0434\u043b\u044f Select Next Tab) \u2318Q : Close Tab \u2325\u21e7\u2318F : Always Show Toolbar in Full Screen (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u21e7\u2318F \u0434\u043b\u044f Find) \u2318R : Open Location... Finder: F2 : Rename Custom Settings via Karabiner Elements \u00b6 Simple Modifications \u00b6 ... (to be written) Complex Modifications \u00b6 See Reference for details. Telegram Desktop: \u2318\u2191 : Move to the previous chat \u2318\u2193 : Move to the next chat \u2318\u2190 : Exit selected chat and search Telegram \u2318T : Show/Hide Telegram","title":"\u0413\u043e\u0440\u044f\u0447\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448\u0438 (Mac OS)"},{"location":"shortcuts-mac/#basic-settings-via-preferences","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u0432 System Preferences/Keyboard/Shortcuts . \u0414\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u043a\u043b\u0430\u0432\u0438\u0448, \u0435\u0441\u043b\u0438 \u044d\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0435 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442 \u043e\u0434\u043d\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435.","title":"Basic Settings via Preferences"},{"location":"shortcuts-mac/#input-sources","text":"F9 : Select the previous input source (\u0434\u043b\u044f \u0437\u0430\u043c\u0435\u043d\u044b \u21ea \u043d\u0430 F9 \u0432 Karabiner Elements)","title":"Input Sources"},{"location":"shortcuts-mac/#spotlight","text":"disabled : Show Spotlight search (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u2318Space \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u044f\u0437\u044b\u043a\u0430 \u0432 Punto Switcher)","title":"Spotlight"},{"location":"shortcuts-mac/#accessabilty","text":"disabled : Turn VoiceOver on or off (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u2318F5 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u043b\u043a\u043b\u0430\u0434\u043a\u0438 fman)","title":"Accessabilty"},{"location":"shortcuts-mac/#app-shortcuts","text":"All Applications: \u2318Q : Quit \u2318] : Toggle Full Screen \u2318] : Exit Full Screen \u2318] : Enter Full Screen Google Chrome: F5 : Reload This Page \u2318D : Select Previous Tab \u2318F : Select Next Tab \u2318N : New Tab \u21e7\u2318F : Find... (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u2318F \u0434\u043b\u044f Select Next Tab) \u2318Q : Close Tab \u2325\u21e7\u2318F : Always Show Toolbar in Full Screen (\u0443\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u21e7\u2318F \u0434\u043b\u044f Find) \u2318R : Open Location... Finder: F2 : Rename","title":"App Shortcuts"},{"location":"shortcuts-mac/#custom-settings-via-karabiner-elements","text":"","title":"Custom Settings via Karabiner Elements"},{"location":"shortcuts-mac/#simple-modifications","text":"... (to be written)","title":"Simple Modifications"},{"location":"shortcuts-mac/#complex-modifications","text":"See Reference for details. Telegram Desktop: \u2318\u2191 : Move to the previous chat \u2318\u2193 : Move to the next chat \u2318\u2190 : Exit selected chat and search Telegram \u2318T : Show/Hide Telegram","title":"Complex Modifications"},{"location":"shortcuts-windows/","text":"\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043d\u0435 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0432\u0435\u0440\u0441\u0438\u0438. \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435. \u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0433\u043e\u0440\u044f\u0447\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448\u0438 \u00b6 Alt + C : Copy ( Ctrl + C ) Alt + X : Cut ( Ctrl + X ) Alt + V : Paste ( Ctrl + V ) Alt + Shift + V : Paste without formatting ( Ctrl + Shift + V ) Alt + S : Save ( Ctrl + S ) Alt + Z : Undo ( Ctrl + Z ) Alt + A : Select all ( Ctrl + A ) Alt + Tab : Move between open applications Alt + Right Enter : Open|Close Calculator Alt + Shift + F : Find ( Ctrl + F ) Alt + N : New... ( Ctrl + N ) \u043a\u0440\u043e\u043c\u0435 Google Chrome, Todoist Alt + Q : Close application ( Alt + F4 ) \u043a\u0440\u043e\u043c\u0435 Telegram, Google Chrome Alt + J : Left ( Left Arrow ) Alt + K : Right ( Right Arrow ) Alt + U : Up ( Up Arrow ) Alt + M : Down ( Down Arrow ) Alt + W : Select whole word under cursor Telegram \u00b6 Alt + T : Open|Hide Telegram Alt + Q : Quit Telegram Todoist \u00b6 Alt + R : Open|Hide Todoist Alt + N : New Task ( Alt + Shift + N ) Google Chrome \u00b6 Alt + N : New Tab Alt + Q : Close Tab Alt + F : Move to next Tab Alt + D : Move to previous Tab FileMaker \u00b6 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 filemaker_functions.ahk Alt + N : New Record Alt + Enter : Commit Record Alt + F : Next Record Alt + D : Previous Record Alt + P : Paste Expense Script Google Spreadsheets \u00b6 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 filemaker_functions.ahk Alt + Right Arrow : Select Row Alt + Left Arrow : Strikethrough","title":"\u0413\u043e\u0440\u044f\u0447\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448\u0438 (Windows)"},{"location":"shortcuts-windows/#_1","text":"Alt + C : Copy ( Ctrl + C ) Alt + X : Cut ( Ctrl + X ) Alt + V : Paste ( Ctrl + V ) Alt + Shift + V : Paste without formatting ( Ctrl + Shift + V ) Alt + S : Save ( Ctrl + S ) Alt + Z : Undo ( Ctrl + Z ) Alt + A : Select all ( Ctrl + A ) Alt + Tab : Move between open applications Alt + Right Enter : Open|Close Calculator Alt + Shift + F : Find ( Ctrl + F ) Alt + N : New... ( Ctrl + N ) \u043a\u0440\u043e\u043c\u0435 Google Chrome, Todoist Alt + Q : Close application ( Alt + F4 ) \u043a\u0440\u043e\u043c\u0435 Telegram, Google Chrome Alt + J : Left ( Left Arrow ) Alt + K : Right ( Right Arrow ) Alt + U : Up ( Up Arrow ) Alt + M : Down ( Down Arrow ) Alt + W : Select whole word under cursor","title":"\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0433\u043e\u0440\u044f\u0447\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448\u0438"},{"location":"shortcuts-windows/#telegram","text":"Alt + T : Open|Hide Telegram Alt + Q : Quit Telegram","title":"Telegram"},{"location":"shortcuts-windows/#todoist","text":"Alt + R : Open|Hide Todoist Alt + N : New Task ( Alt + Shift + N )","title":"Todoist"},{"location":"shortcuts-windows/#google-chrome","text":"Alt + N : New Tab Alt + Q : Close Tab Alt + F : Move to next Tab Alt + D : Move to previous Tab","title":"Google Chrome"},{"location":"shortcuts-windows/#filemaker","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 filemaker_functions.ahk Alt + N : New Record Alt + Enter : Commit Record Alt + F : Next Record Alt + D : Previous Record Alt + P : Paste Expense Script","title":"FileMaker"},{"location":"shortcuts-windows/#google-spreadsheets","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 filemaker_functions.ahk Alt + Right Arrow : Select Row Alt + Left Arrow : Strikethrough","title":"Google Spreadsheets"},{"location":"system-settings/","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435\u043b\u044c\u0437\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 System Preferences, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0447\u0435\u0440\u0435\u0437 Terminal. \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 bouncing \u043f\u0440\u0438 \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f\u0445 \u0434\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432 Dock: defaults write com.apple.dock no-bouncing -bool TRUE killall Dock \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a anti-aliasing \u0434\u043b\u044f Mac OS Catalina ( \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u0442\u0443\u0442 ): \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432 System Preferences/General \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043e\u043f\u0446\u0438\u044f Use font smoothing when available ; \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435: defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO ; \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u0443; \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u043e\u043f\u0446\u0438\u044e Use font smoothing when available . \u041a\u0430\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0432\u0441\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043a\u0430\u043a \u043d\u0430\u0434\u043e? \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Finder \u2014 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0448\u0440\u0438\u0444\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u044b\u043c \u0438 \u0433\u043b\u0430\u0434\u043a\u0438\u043c. \u0410 \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Photoshop \u0438 \u043f\u043e\u043f\u044b\u0442\u0430\u0439\u0442\u0435\u0441\u044c \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0444\u0430\u0439\u043b \u2014 \u0432\u043e \u0432\u043d\u043e\u0432\u044c \u043f\u043e\u044f\u0432\u0438\u0432\u0448\u0435\u043c\u0441\u044f \u043e\u043a\u043d\u0435 Finder \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0448\u0440\u0438\u0444\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0442\u0430\u043a\u0438\u043c \u0436\u0435. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0442\u0440\u044e\u043a \u043d\u0435 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u043b, \u0432 \u0432\u0442\u043e\u0440\u043e\u043c \u043e\u043a\u043d\u0435 Finder \u0448\u0440\u0438\u0444\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u043d\u0435\u0441\u0433\u043b\u0430\u0436\u0435\u043d\u043d\u044b\u043c\u0438. \u0427\u0442\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 LaunchPad \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a: \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u044d\u043a\u0430\u043f\u043e\u043c \u0431\u0430\u0437\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 LaunchPad \u0438\u043b\u0438 \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u043f\u0443\u0442\u044c \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043f\u043a\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439: echo $(find /private/var/folders -user $(id -u) -name com.apple.dock.launchpad 2> /dev/null)/db \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0432 \u044d\u0442\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u043a\u0440\u0438\u043f\u0442 \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u044b: sqlite3 -separator ' | ' db \"SELECT parent_id, ordering, apps.title, apps.item_id FROM items JOIN apps ON items.rowid = apps.item_id ORDER BY parent_id, ordering;\" \u0412\u0441\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f LaunchPad \u0431\u0443\u0434\u0443\u0442 \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u043e \u044d\u043a\u0440\u0430\u043d\u0430\u043c \u0438\u043b\u0438 \u0433\u0440\u0443\u043f\u043f\u0430\u043c (\u043f\u0435\u0440\u0432\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430), \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432\u043d\u0443\u0442\u0440\u0438 \u044d\u043a\u0440\u0430\u043d\u0430/\u0433\u0440\u0443\u043f\u043f\u044b \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d \u0447\u0438\u0441\u043b\u043e\u043c \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439. \u0427\u0435\u0442\u0432\u0435\u0440\u0442\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u2014 item_id \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043f\u043e \u0431\u044d\u043a\u0430\u043f\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0431\u043d\u0443\u043b\u0435\u043d\u0438\u044f LaundPad \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0432\u0440\u0443\u0447\u043d\u0443\u044e. \u0427\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0431\u0430\u0437\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u043a\u0440\u0438\u043f\u0442 \u0447\u0442\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u044b, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 item_id \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f ( N ), \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u0430 \u0434\u0430\u043b\u044c\u0448\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443: sqlite3 db \"DELETE FROM apps WHERE item_id = 'N';\" && killall Dock \u0414\u043b\u044f \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0441 \u0434\u043b\u0438\u043d\u043d\u044b\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u043c\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 item_id \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f ( N ) \u0438\u0437 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443: sqlite3 db \"UPDATE apps SET title = 'Photoshop CC 2019' WHERE item_id = 'N';\" && killall Dock \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0435\u0439\u0434\u0436\u0430 \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0439 \u0443 \u0438\u043a\u043e\u043d\u043a\u0438 \u0432 Dock: \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u043f\u0443\u0442\u044c \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439: echo $(find /private/var/folders -user $(id -u) -name com.apple.notificationcenter 2> /dev/null)/db \u041d\u0430\u0439\u0434\u0438\u0442\u0435 bundleid ( CFBundleIdentifier ) \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 Application.app/Contents/Info.plist \u0414\u0430\u043b\u044c\u043d\u0435 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 LaunchPad: \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432: defaults write com.apple.dock springboard-rows -int 6 && killall Dock \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043b\u043e\u043d\u043e\u043a: defaults write com.apple.dock springboard-columns -int 8 && killall Dock \u0443\u0441\u0442\u0440\u0430\u043d\u0438\u0442\u044c blur \u0443 \u0444\u043e\u043d\u0430: defaults write com.apple.dock springboard-blur-radius -int 0 && killall Dock (\u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442) \u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f Box Drive (Mac OS) \u00b6 \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0435\u043d\u0438\u0435 \u043b\u0438\u043c\u0438\u0442\u0430 \u043a\u044d\u0448\u0430 \u0434\u043b\u044f Box Drive: defaults write com.box.desktop MaximumCacheSize N , \u0433\u0434\u0435 N \u2014 \u043a\u043e\u043b-\u0432\u043e GB \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u043e\u0434 \u043a\u044d\u0448; \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c Box Drive \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0435\u0433\u043e \u0437\u0430\u043d\u043e\u0432\u043e. \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u043a\u043e\u043d\u043a\u0438 \u0441 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 Finder: \u0441\u043a\u0440\u044b\u0442\u044c \u0438\u043a\u043d\u043e\u043a\u0443 Box Drive: chflags hidden /Users/noideaatall/Box \u0441\u043e\u0437\u0434\u0430\u0442\u044c symlink \u0434\u043b\u044f \u0431\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u043c\u0435\u043d\u044e Finder: ln -s /Users/noideaatall/Box /Users/noideaatall/_box && killall Finder","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u044b (Mac OS)"},{"location":"system-settings/#box-drive-mac-os","text":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0435\u043d\u0438\u0435 \u043b\u0438\u043c\u0438\u0442\u0430 \u043a\u044d\u0448\u0430 \u0434\u043b\u044f Box Drive: defaults write com.box.desktop MaximumCacheSize N , \u0433\u0434\u0435 N \u2014 \u043a\u043e\u043b-\u0432\u043e GB \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u043e\u0434 \u043a\u044d\u0448; \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c Box Drive \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0435\u0433\u043e \u0437\u0430\u043d\u043e\u0432\u043e. \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u043a\u043e\u043d\u043a\u0438 \u0441 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 Finder: \u0441\u043a\u0440\u044b\u0442\u044c \u0438\u043a\u043d\u043e\u043a\u0443 Box Drive: chflags hidden /Users/noideaatall/Box \u0441\u043e\u0437\u0434\u0430\u0442\u044c symlink \u0434\u043b\u044f \u0431\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u043c\u0435\u043d\u044e Finder: ln -s /Users/noideaatall/Box /Users/noideaatall/_box && killall Finder","title":"\u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f Box Drive (Mac OS)"},{"location":"system-windows-old/","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Taskbar: \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043a\u043e\u043d\u043e\u043a \u0437\u043d\u0430\u0447\u043a\u043e\u0432: Shift+Right Click > \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 + Winaero Tweaker > Tools: Icons Cache Reset \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u0438 \u043f\u0430\u043d\u0435\u043b\u0438 via Winaero Tweaker \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 thumbnails \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043b\u0438\u0448\u043d\u0438\u0445 \u043a\u043d\u043e\u043f\u043e\u043a \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u041f\u0440\u043e\u0432\u043e\u0434\u043d\u0438\u043a\u0430: \u0421\u0442\u0430\u0440\u0442 \u0441 This PC \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 This PC via Winaero Tweaker Deleting OneDrive link via regedit: ... \u0414\u043e\u043c\u0430\u0448\u043d\u044f\u044f \u0433\u0440\u0443\u043f\u043f\u0430? \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043a\u043e\u043d\u043e\u043a \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e regedit: \u041f\u0430\u043f\u043e\u043a \u0414\u0438\u0441\u043a\u043e\u0432 \u0420\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0444\u0430\u0439\u043b\u043e\u0432 : .bat .jpeg, .jpg, .png, .tif, .tiff, .gif, .bmp \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u0441\u043a\u0440\u043e\u043b\u043b\u043e\u0432 \u0438 \u043c\u0435\u043d\u044e \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e Alt-Tab \u043c\u0435\u043d\u044e \u0447\u0435\u0440\u0435\u0437 Winaero \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043a\u043e\u043d\u043e\u043a \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 .exe-\u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u0443\u0442\u0438\u043b\u0438\u0442\u043e\u0439 \u0437\u0430\u043f\u0430\u043a\u043e\u0432\u0430\u043d .exe-\u0444\u0430\u0439\u043b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0443\u0442\u0438\u043b\u0438\u0442\u044b PEiD (\u043f\u043e\u043b\u0435 EP Section) \u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u0442\u044c .exe-\u0444\u0430\u0439\u043b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0443\u0442\u0438\u043b\u0438\u0442\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0434\u043b\u044f UPX: \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c upx.exe \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432 cmd.exe: upx -d -o Original_unpacked.exe Original.exe \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u043a\u043e\u043d\u043a\u0443 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e .exe-\u0444\u0430\u0439\u043b\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Resource Hacker \u0421\u0434\u0435\u043b\u0430\u0442\u044c bak-\u043a\u043e\u043f\u0438\u044e \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e .exe-\u0444\u0430\u0439\u043b\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 .exe \u043f\u043e\u0434 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: LightShot \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u0434\u043b\u044f \u044f\u0440\u043b\u044b\u043a\u0430 via Winaero Tweaker \u0418\u0437\u043c\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u043a\u0430 \u0434\u043b\u044f \u00ab\u0411\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430\u00bb via Winaero Tweaker \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439 \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0430 via Window FX \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0443\u0442\u0438\u043b\u0438\u0442\u044b RBTray \u0434\u043b\u044f \u0441\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u044f \u0432 \u0442\u0440\u0435\u0439 \u043a\u043b\u0438\u043a\u043e\u043c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438 \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u00ab\u0421\u0432\u0435\u0440\u043d\u0443\u0442\u044c\u00bb. \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0443\u0442\u0438\u043b\u0438\u0442\u0443 \u0432 \u0430\u0432\u0442\u043e\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0438\u043a\u043e\u043d\u043e\u043a \u00b6 \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u00b6 \u041f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f > \u0422\u0435\u043c\u044b > \u0421\u043e\u043f\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b > \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0430: \u042d\u0442\u043e\u0442 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 > shut_down_with_computer.ico \u041a\u043e\u0440\u0437\u0438\u043d\u0430 (\u043f\u043e\u043b\u043d\u0430\u044f) > copland-4-recycle-bin.ico \u041a\u043e\u0440\u0437\u0438\u043d\u0430 (\u043f\u0443\u0441\u0442\u0430\u044f) > copland-4-recycle-bin.ico \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u00b6 \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Resource Hacker: NexusFile.exe > briefcase.ico Simplenote.exe > template_empty.ico \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u044f\u0440\u043b\u044b\u043a\u043e\u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0430 \u00b6 \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 > \u042f\u0440\u043b\u044b\u043a > \u0421\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u043e\u043a...: sleep.lnk (hypernate.bat) > monitor_moon.ico turnoff.lnk (turnoff.bat) > battery.ico Anaconda Navigator.lnk > expand_hierarchial_array.ico HandBrake.lnk > multimedia.ico Skype.lnk > modem.ico Winaero Tweaker.lnk > clean_drive.ico","title":"System windows old"},{"location":"system-windows-old/#_1","text":"","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0438\u043a\u043e\u043d\u043e\u043a"},{"location":"system-windows-old/#_2","text":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f > \u0422\u0435\u043c\u044b > \u0421\u043e\u043f\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b > \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0430: \u042d\u0442\u043e\u0442 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 > shut_down_with_computer.ico \u041a\u043e\u0440\u0437\u0438\u043d\u0430 (\u043f\u043e\u043b\u043d\u0430\u044f) > copland-4-recycle-bin.ico \u041a\u043e\u0440\u0437\u0438\u043d\u0430 (\u043f\u0443\u0441\u0442\u0430\u044f) > copland-4-recycle-bin.ico","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u043a\u043e\u0432"},{"location":"system-windows-old/#_3","text":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Resource Hacker: NexusFile.exe > briefcase.ico Simplenote.exe > template_empty.ico","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c"},{"location":"system-windows-old/#_4","text":"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 > \u042f\u0440\u043b\u044b\u043a > \u0421\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u043e\u043a...: sleep.lnk (hypernate.bat) > monitor_moon.ico turnoff.lnk (turnoff.bat) > battery.ico Anaconda Navigator.lnk > expand_hierarchial_array.ico HandBrake.lnk > multimedia.ico Skype.lnk > modem.ico Winaero Tweaker.lnk > clean_drive.ico","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u043a\u043e\u0432 \u044f\u0440\u043b\u044b\u043a\u043e\u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0430"}]}